{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maxin\\\\Documents\\\\GitHub\\\\TuneTalk\\\\tunetalk\\\\src\\\\pages\\\\CommunityGenres\\\\Country.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FaCheck, FaPlus } from 'react-icons/fa'; // FontAwesome icons\nimport '../../css/Community.css';\nimport { useUser } from \"../../authentication/UserState\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"a8c9857ace8449f290ed14c54c878e1f\";\nconst CLIENT_SECRET = \"c747a0da53124c4ba8bc12a0e88d859b\";\nfunction Country() {\n  _s();\n  const [isFollowing, setIsFollowing] = useState(false);\n  const [accessToken, setAccessToken] = useState('');\n  const [CountryPlaylists, setCountryPlaylists] = useState([]);\n  const [randomTrack, setRandomTrack] = useState(null);\n  const [user] = useUser();\n  const handleFollowClick = async () => {\n    if (!isFollowing) {\n      try {\n        await axios.post(`http://localhost:8082/api/community/follow/${encodeURIComponent(user.email)}`, {\n          community: 'country',\n          followStatus: true\n        });\n        setIsFollowing(true);\n      } catch (err) {\n        console.error(\"Error updating follow status:\", err);\n      }\n    } else {\n      try {\n        await axios.post(`http://localhost:8082/api/community/un-follow/${encodeURIComponent(user.email)}`, {\n          community: 'country',\n          followStatus: false\n        });\n        setIsFollowing(false);\n      } catch (err) {\n        console.error(\"Error updating un-follow status:\", err);\n      }\n    }\n  };\n  const fetchFollowStatus = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8082/api/community/status/${encodeURIComponent(user.email)}`);\n      setIsFollowing(response.data.Country); // assuming the response data structure matches your expectations\n    } catch (err) {\n      console.error(\"Error fetching follow status:\", err);\n    }\n  };\n  const fetchInitialFollow = async () => {\n    try {\n      await axios.post(`http://localhost:8082/api/community/initiate-follows/${encodeURIComponent(user.email)}`);\n    } catch (err) {\n      console.error(\"Error initializing follow record:\", err);\n    }\n  };\n  useEffect(() => {\n    // Function to retrieve the access token\n    const getAccessToken = async () => {\n      const authParameters = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: `grant_type=client_credentials&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\n      };\n      const response = await fetch('https://accounts.spotify.com/api/token', authParameters);\n      const data = await response.json();\n      setAccessToken(data.access_token);\n    };\n    getAccessToken();\n  }, []);\n  useEffect(() => {\n    // Function to fetch Country playlists using the access token\n    const fetchCountryMusic = async () => {\n      if (!accessToken) return;\n      const response = await fetch('https://api.spotify.com/v1/browse/categories/Country/playlists', {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setCountryPlaylists(data.playlists.items);\n      if (data.playlists.items.length > 0) {\n        const playlistId = data.playlists.items[0].id;\n        const tracksResponse = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n          headers: {\n            'Authorization': `Bearer ${accessToken}`\n          }\n        });\n        const tracksData = await tracksResponse.json();\n        if (tracksData.items.length > 0) {\n          const randomIndex = Math.floor(Math.random() * tracksData.items.length);\n          setRandomTrack(tracksData.items[randomIndex].track);\n        }\n      }\n    };\n    fetchCountryMusic().catch(error => {\n      console.error('Fetching Country playlists failed:', error);\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (user.email) {\n      fetchInitialFollow();\n      fetchFollowStatus();\n    }\n    // eslint-disable-next-line\n  }, [user.email]); // This effect depends on user.email\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Country Music\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFollowClick,\n      className: \"follow-button\",\n      children: isFollowing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 30\n        }, this), \" Following\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 59\n        }, this), \" Follow\"]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }, this), randomTrack && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"featured-track-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todays Featured Track: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: randomTrack.album.images[0].url,\n          alt: randomTrack.name,\n          className: \"track-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"track-title\",\n            children: randomTrack.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"track-artist\",\n            children: [\"by \", randomTrack.artists.map(artist => artist.name).join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlists-container\",\n      children: CountryPlaylists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: playlist.images[0].url,\n          alt: playlist.name,\n          className: \"playlist-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlist-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: playlist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: playlist.external_urls.spotify,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"playlist-link\",\n            children: \"Listen on Spotify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)]\n      }, playlist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n_s(Country, \"BmXqaPhmhuyauYOdczkjvKm8hHY=\", false, function () {\n  return [useUser];\n});\n_c = Country;\nexport default Country;\nvar _c;\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"names":["React","useState","useEffect","FaCheck","FaPlus","useUser","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CLIENT_ID","CLIENT_SECRET","Country","_s","isFollowing","setIsFollowing","accessToken","setAccessToken","CountryPlaylists","setCountryPlaylists","randomTrack","setRandomTrack","user","handleFollowClick","post","encodeURIComponent","email","community","followStatus","err","console","error","fetchFollowStatus","response","get","data","fetchInitialFollow","getAccessToken","authParameters","method","headers","body","fetch","json","access_token","fetchCountryMusic","ok","Error","status","playlists","items","length","playlistId","id","tracksResponse","tracksData","randomIndex","Math","floor","random","track","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","album","images","url","alt","name","artists","map","artist","join","playlist","href","external_urls","spotify","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/maxin/Documents/GitHub/TuneTalk/tunetalk/src/pages/CommunityGenres/Country.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FaCheck, FaPlus } from 'react-icons/fa'; // FontAwesome icons\r\nimport '../../css/Community.css';\r\nimport { useUser } from \"../../authentication/UserState\";\r\nimport axios from \"axios\";\r\n\r\nconst CLIENT_ID = \"a8c9857ace8449f290ed14c54c878e1f\";\r\nconst CLIENT_SECRET = \"c747a0da53124c4ba8bc12a0e88d859b\";\r\n\r\nfunction Country() {\r\n    const [isFollowing, setIsFollowing] = useState(false);\r\n    const [accessToken, setAccessToken] = useState('');\r\n    const [CountryPlaylists, setCountryPlaylists] = useState([]);\r\n    const [randomTrack, setRandomTrack] = useState(null);\r\n    \r\n    const [user] = useUser(); \r\n\r\n    const handleFollowClick = async () => {\r\n      if (!isFollowing){\r\n        try {\r\n            await axios.post(`http://localhost:8082/api/community/follow/${encodeURIComponent(user.email)}`, {\r\n              community: 'country',\r\n              followStatus: true\r\n            });\r\n            setIsFollowing(true);\r\n        } catch (err) {\r\n            console.error(\"Error updating follow status:\", err);\r\n        }\r\n      } else {\r\n        try {\r\n          await axios.post(`http://localhost:8082/api/community/un-follow/${encodeURIComponent(user.email)}`, {\r\n            community: 'country',\r\n            followStatus: false\r\n          });\r\n          setIsFollowing(false);\r\n        } catch (err) {\r\n          console.error(\"Error updating un-follow status:\", err);\r\n        }\r\n      }\r\n    };\r\n\r\n    const fetchFollowStatus = async () => {\r\n      try {\r\n          const response = await axios.get(`http://localhost:8082/api/community/status/${encodeURIComponent(user.email)}`);\r\n          setIsFollowing(response.data.Country); // assuming the response data structure matches your expectations\r\n      } catch (err) {\r\n          console.error(\"Error fetching follow status:\", err);\r\n      }\r\n    };\r\n\r\n    const fetchInitialFollow = async () => {\r\n      try {\r\n          await axios.post(`http://localhost:8082/api/community/initiate-follows/${encodeURIComponent(user.email)}`);\r\n      } catch (err) {\r\n          console.error(\"Error initializing follow record:\", err);\r\n      }\r\n    };\r\n\r\n    useEffect(() => {\r\n      // Function to retrieve the access token\r\n      const getAccessToken = async () => {\r\n        const authParameters = {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n          },\r\n          body: `grant_type=client_credentials&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`,\r\n        };\r\n\r\n        const response = await fetch('https://accounts.spotify.com/api/token', authParameters);\r\n        const data = await response.json();\r\n        setAccessToken(data.access_token);\r\n      };\r\n\r\n      getAccessToken();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      // Function to fetch Country playlists using the access token\r\n      const fetchCountryMusic = async () => {\r\n        if (!accessToken) return;\r\n\r\n        const response = await fetch('https://api.spotify.com/v1/browse/categories/Country/playlists', {\r\n          headers: { 'Authorization': `Bearer ${accessToken}` },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setCountryPlaylists(data.playlists.items);\r\n\r\n            if (data.playlists.items.length > 0) {\r\n              const playlistId = data.playlists.items[0].id;\r\n              const tracksResponse = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\r\n                  headers: { 'Authorization': `Bearer ${accessToken}` },\r\n              });\r\n              const tracksData = await tracksResponse.json();\r\n              if (tracksData.items.length > 0) {\r\n                  const randomIndex = Math.floor(Math.random() * tracksData.items.length);\r\n                  setRandomTrack(tracksData.items[randomIndex].track);\r\n              }\r\n          }\r\n      };\r\n\r\n      fetchCountryMusic().catch(error => {\r\n        console.error('Fetching Country playlists failed:', error);\r\n      });\r\n    }, [accessToken]);\r\n\r\n    useEffect(() => {\r\n      if (user.email) {\r\n        fetchInitialFollow();\r\n        fetchFollowStatus();\r\n      }\r\n    // eslint-disable-next-line\r\n    }, [user.email]); // This effect depends on user.email\r\n\r\n    return (\r\n        <div className=\"container-page\">\r\n          <h1>Country Music</h1>\r\n          <button onClick={handleFollowClick} className=\"follow-button\">\r\n            {isFollowing ? <><FaCheck /> Following</> : <><FaPlus /> Follow</>}\r\n          </button>\r\n          {randomTrack && (\r\n            <div className=\"featured-track-container\">\r\n                <h2>Todays Featured Track: </h2>\r\n                <div className=\"track-card\">\r\n                    <img src={randomTrack.album.images[0].url} alt={randomTrack.name} className=\"track-image\" />\r\n                    <div className=\"track-info\">\r\n                        <p className=\"track-title\">{randomTrack.name}</p>\r\n                        <p className=\"track-artist\">by {randomTrack.artists.map(artist => artist.name).join(', ')}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          )}\r\n          <div className=\"playlists-container\">\r\n            {CountryPlaylists.map((playlist) => (\r\n              <div key={playlist.id} className=\"playlist-card\">\r\n                <img src={playlist.images[0].url} alt={playlist.name} className=\"playlist-image\" />\r\n                <div className=\"playlist-info\">\r\n                  <h3>{playlist.name}</h3>\r\n                  <a href={playlist.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\" className=\"playlist-link\">Listen on Spotify</a>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Country;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}