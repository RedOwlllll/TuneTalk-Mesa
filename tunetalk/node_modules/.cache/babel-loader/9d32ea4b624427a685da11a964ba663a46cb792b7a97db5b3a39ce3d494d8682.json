{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mesac\\\\OneDrive\\\\Documents\\\\GitHub\\\\TuneTalk\\\\tunetalk\\\\src\\\\pages\\\\Friends.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Friends = () => {\n  _s();\n  const [userId, setUserId] = useState(''); // You might get this from context or props\n  const [friendEmail, setFriendEmail] = useState('');\n  const [friends, setFriends] = useState([]);\n  const [requests, setRequests] = useState({\n    received: [],\n    sent: []\n  });\n\n  // Fetch friends and friend requests on component mount\n  useEffect(() => {\n    const fetchFriends = async () => {\n      try {\n        const res = await axios.get(`/api/friends/list/${userId}`);\n        setFriends(res.data);\n      } catch (err) {\n        console.error('Error fetching friends:', err);\n      }\n    };\n    const fetchRequests = async () => {\n      // Placeholder for API endpoint to fetch friend requests\n    };\n    fetchFriends();\n    fetchRequests();\n  }, [userId]);\n  const handleAddFriend = async () => {\n    try {\n      await axios.post('/api/friends/request', {\n        requesterId: userId,\n        recipientEmail: friendEmail\n      });\n      alert('Friend request sent!');\n    } catch (err) {\n      alert('Failed to send friend request:', err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friends-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: friendEmail,\n      onChange: e => setFriendEmail(e.target.value),\n      placeholder: \"Enter friend's email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddFriend,\n      children: \"Add Friend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: friends.map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: friend.name\n      }, friend.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Friends, \"qbBsQeWNA1/UM6jSaJd6n8jbJIg=\");\n_c = Friends;\nvar _c;\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Friends","_s","userId","setUserId","friendEmail","setFriendEmail","friends","setFriends","requests","setRequests","received","sent","fetchFriends","res","get","data","err","console","error","fetchRequests","handleAddFriend","post","requesterId","recipientEmail","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","map","friend","name","id","_c","$RefreshReg$"],"sources":["C:/Users/mesac/OneDrive/Documents/GitHub/TuneTalk/tunetalk/src/pages/Friends.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const Friends = () => {\r\n    const [userId, setUserId] = useState(''); // You might get this from context or props\r\n    const [friendEmail, setFriendEmail] = useState('');\r\n    const [friends, setFriends] = useState([]);\r\n    const [requests, setRequests] = useState({ received: [], sent: [] });\r\n\r\n    // Fetch friends and friend requests on component mount\r\n    useEffect(() => {\r\n        const fetchFriends = async () => {\r\n            try {\r\n                const res = await axios.get(`/api/friends/list/${userId}`);\r\n                setFriends(res.data);\r\n            } catch (err) {\r\n                console.error('Error fetching friends:', err);\r\n            }\r\n        };\r\n\r\n        const fetchRequests = async () => {\r\n            // Placeholder for API endpoint to fetch friend requests\r\n        };\r\n\r\n        fetchFriends();\r\n        fetchRequests();\r\n    }, [userId]);\r\n\r\n    const handleAddFriend = async () => {\r\n        try {\r\n            await axios.post('/api/friends/request', { requesterId: userId, recipientEmail: friendEmail });\r\n            alert('Friend request sent!');\r\n        } catch (err) {\r\n            alert('Failed to send friend request:', err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"friends-page\">\r\n            <h1>Friends</h1>\r\n            <input\r\n                value={friendEmail}\r\n                onChange={(e) => setFriendEmail(e.target.value)}\r\n                placeholder=\"Enter friend's email\"\r\n            />\r\n            <button onClick={handleAddFriend}>Add Friend</button>\r\n            <h2>My Friends</h2>\r\n            <ul>\r\n                {friends.map(friend => <li key={friend.id}>{friend.name}</li>)}\r\n            </ul>\r\n            {/* Implement lists for friend requests here */}\r\n        </div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}