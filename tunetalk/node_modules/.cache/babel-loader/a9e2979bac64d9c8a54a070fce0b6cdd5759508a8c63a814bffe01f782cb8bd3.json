{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maxin\\\\Documents\\\\GitHub\\\\TuneTalk\\\\tunetalk\\\\src\\\\pages\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport \"../css/App.css\"; // NOTE: put 2 . (\"..\") since this file is in it's own folder too. \nimport \"../css/Post.css\";\nimport StarRating from \"./StarRating\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  //variables and hooks\n  const [recentTrack, setRecentTrack] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [replyTexts, setReplyTexts] = useState({});\n  const [caption, setCaption] = useState('');\n  const [captionPosted, setCaptionPosted] = useState(false);\n  const token = localStorage.getItem(\"access_token\");\n  const username = localStorage.getItem(\"userlogin\");\n  const [posted, setPosted] = useState(false);\n  const [editStatus, setEditStatus] = useState({});\n  const [editTexts, setEditTexts] = useState({});\n  const [editingReplyId, setEditingReplyId] = useState(null);\n  const [editReplyText, setEditReplyText] = useState({});\n  const postId = localStorage.getItem(\"postId\");\n  //function to retrieve users recerntly played song \n  const getRecentTrack = () => {\n    if (!token) {\n      console.log('No token available'); //log an error if no token is available\n      return;\n    }\n\n    //make a get request to the spotify api\n    axios.get('https://api.spotify.com/v1/me/player/recently-played?limit=1', {\n      headers: {\n        'Authorization': `Bearer ${token}` // set the autherization header with the token\n      }\n    }).then(response => {\n      const track = response.data.items[0].track; //extract track info from the response\n\n      //axios.get('http://localhost:8082/api/caption/${track.id}')\n      //update the recentTrack state with the track details\n      setRecentTrack({\n        artist: track.artists.map(artist => artist.name).join(', '),\n        //join multiple artists the a comma\n        title: track.name,\n        //title \n        albumCover: track.album.images[0].url,\n        // URL of album image\n        caption: caption\n      });\n\n      //prepare song to be saved\n      const songData = {\n        title: track.name,\n        artist: track.artists.map(artist => artist.name).join(', '),\n        albumCover: track.album.images[0].url,\n        comments: [],\n        rating: 0,\n        caption: caption\n      };\n      saveTrackToDatabase(username, songData);\n      setPosted(true);\n    }).catch(error => {\n      console.log('Error fetching recent track:', error); //log any errors during the call\n    });\n  };\n\n  //api that saves the song information in the db\n  const saveTrackToDatabase = (username, songData) => {\n    console.log(songData);\n    axios.post(`http://localhost:8082/api/user/${username}/addPost`, songData).then(response => {\n      console.log('Song post saved:', response.data);\n      localStorage.setItem(\"postId\", response.data._id);\n    }).catch(error => {\n      console.error('Error saving the song post:', error.response.data);\n    });\n  };\n\n  //sets the new comments\n  const handleCommentSubmit = e => {\n    e.preventDefault();\n    const newCommentToAdd = {\n      id: comments.length + 1,\n      username: username,\n      body: newComment,\n      date: new Date(),\n      replies: []\n    };\n    setComments([...comments, newCommentToAdd]);\n    setNewComment('');\n  };\n\n  //sets the new replies\n  const handleReplySubmit = async (commentId, e) => {\n    e.preventDefault();\n    addReplyToComment(commentId, replyTexts[commentId]);\n    setReplyTexts({\n      ...replyTexts,\n      [commentId]: ''\n    });\n  };\n\n  //adds the reply to the parent comment\n  const addReplyToComment = (commentId, replyText) => {\n    const updatedComments = comments.map(comment => {\n      if (comment.id === commentId) {\n        const newReply = {\n          id: comment.replies.length + 1,\n          username: username,\n          body: replyText,\n          date: new Date()\n        };\n        return {\n          ...comment,\n          replies: [...comment.replies, newReply]\n        };\n      }\n      return comment;\n    });\n    setComments(updatedComments);\n  };\n  const handleRatingSubmit = async (rate, postId) => {\n    axios.post(`http://localhost:8082/api/posts/${postId}/rate`, {\n      rating: rate\n    }).then(response => {\n      console.log('Rating submitted:', response.data);\n    }).catch(error => {\n      console.error('Error submitting rating:', error);\n    });\n  };\n\n  // Start editing a comment\n  const handleEdit = id => {\n    setEditStatus({\n      ...editStatus,\n      [id]: true\n    });\n    setEditTexts({\n      ...editTexts,\n      [id]: comments.find(comment => comment.id === id).body\n    });\n  };\n\n  // Cancel editing\n  const handleCancel = id => {\n    setEditStatus({\n      ...editStatus,\n      [id]: false\n    });\n  };\n\n  // Save the edited comment\n  const handleSave = id => {\n    const updatedComments = comments.map(comment => {\n      if (comment.id === id) {\n        return {\n          ...comment,\n          body: editTexts[id]\n        };\n      }\n      return comment;\n    });\n    setComments(updatedComments);\n    setEditStatus({\n      ...editStatus,\n      [id]: false\n    });\n  };\n  const startEditReply = (replyId, currentText) => {\n    setEditingReplyId(replyId);\n    setEditReplyText({\n      ...editReplyText,\n      [replyId]: currentText\n    });\n  };\n\n  // Saves the reply changes\n  const saveReplyChanges = replyId => {\n    const updatedComments = comments.map(comment => {\n      if (comment.id === replyId) {\n        const updatedReplies = comment.replies.map(reply => {\n          if (reply.id === replyId) {\n            return {\n              ...reply,\n              body: editReplyText[replyId]\n            };\n          }\n          return reply;\n        });\n        return {\n          ...comment,\n          replies: updatedReplies\n        };\n      }\n      return comment;\n    });\n    setComments(updatedComments);\n    setEditingReplyId(null);\n    setEditReplyText({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: !posted && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getRecentTrack,\n        children: \"Show Last Played Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), recentTrack && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"song-title\",\n          children: recentTrack.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"artist-name\",\n          children: recentTrack.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card-image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recentTrack.albumCover,\n          alt: `${recentTrack.title} Album Cover`,\n          className: \"post-card-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n          onRating: rate => {\n            console.log(rate);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card-content\",\n        children: [captionRender(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-container\",\n          children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-box\",\n            children: editStatus[comment.id] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: editTexts[comment.id],\n                onChange: e => setEditTexts({\n                  ...editTexts,\n                  [comment.id]: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSave(comment.id),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleCancel(comment.id),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: comment.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: comment.body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(comment.date).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"comment-edit-button\",\n                  onClick: () => handleEdit(comment.id),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 45\n              }, this), comment.replies && comment.replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reply-box\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"reply-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: reply.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 57\n                  }, this), editingReplyId === reply.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: editReplyText[reply.id] || reply.body,\n                    onChange: e => setEditReplyText({\n                      ...editReplyText,\n                      [reply.id]: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 61\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: reply.body\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: new Date(reply.date).toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"comment-edit-button\",\n                    onClick: () => startEditReply(reply.id, reply.body),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 57\n                  }, this), editingReplyId === reply.id && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => saveReplyChanges(reply.id),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 53\n                }, this)\n              }, reply.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 49\n              }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => handleReplySubmit(comment.id, e),\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Reply...\",\n                  value: replyTexts[comment.id] || '',\n                  onChange: e => setReplyTexts({\n                    ...replyTexts,\n                    [comment.id]: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Reply\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true)\n          }, comment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCommentSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"comment-input\",\n            placeholder: \"Add a comment...\",\n            value: newComment,\n            onChange: e => setNewComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-comment\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n}\n_s(Post, \"p2365w2NZKbPQlROFS2tQ/83U2E=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","axios","StarRating","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","_s","recentTrack","setRecentTrack","comments","setComments","newComment","setNewComment","replyTexts","setReplyTexts","caption","setCaption","captionPosted","setCaptionPosted","token","localStorage","getItem","username","posted","setPosted","editStatus","setEditStatus","editTexts","setEditTexts","editingReplyId","setEditingReplyId","editReplyText","setEditReplyText","postId","getRecentTrack","console","log","get","headers","then","response","track","data","items","artist","artists","map","name","join","title","albumCover","album","images","url","songData","rating","saveTrackToDatabase","catch","error","post","setItem","_id","handleCommentSubmit","e","preventDefault","newCommentToAdd","id","length","body","date","Date","replies","handleReplySubmit","commentId","addReplyToComment","replyText","updatedComments","comment","newReply","handleRatingSubmit","rate","handleEdit","find","handleCancel","handleSave","startEditReply","replyId","currentText","saveReplyChanges","updatedReplies","reply","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onRating","captionRender","value","onChange","target","toLocaleString","type","onSubmit","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/maxin/Documents/GitHub/TuneTalk/tunetalk/src/pages/Post.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport \"../css/App.css\"; // NOTE: put 2 . (\"..\") since this file is in it's own folder too. \r\nimport \"../css/Post.css\";\r\nimport StarRating from \"./StarRating\";\r\n\r\nfunction Post() {\r\n\r\n    //variables and hooks\r\n    const [recentTrack, setRecentTrack] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [replyTexts, setReplyTexts] = useState({});    \r\n    const [caption, setCaption] = useState('');\r\n    const [captionPosted, setCaptionPosted] = useState(false);\r\n\r\n    const token = localStorage.getItem(\"access_token\");\r\n    const username = localStorage.getItem(\"userlogin\");\r\n    const [posted, setPosted] = useState(false);\r\n    const [editStatus, setEditStatus] = useState({});\r\n    const [editTexts, setEditTexts] = useState({});\r\n    const [editingReplyId, setEditingReplyId] = useState(null);\r\n    const [editReplyText, setEditReplyText] = useState({});\r\n\r\n    const postId = localStorage.getItem(\"postId\");\r\n    //function to retrieve users recerntly played song \r\n    const getRecentTrack = () => {\r\n\r\n\r\n        if (!token) {\r\n            console.log('No token available'); //log an error if no token is available\r\n            return;\r\n        }\r\n\r\n        //make a get request to the spotify api\r\n        axios.get('https://api.spotify.com/v1/me/player/recently-played?limit=1', {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}` // set the autherization header with the token\r\n            }\r\n        }).then(response => {\r\n            const track = response.data.items[0].track; //extract track info from the response\r\n\r\n                //axios.get('http://localhost:8082/api/caption/${track.id}')\r\n            //update the recentTrack state with the track details\r\n            setRecentTrack({\r\n                artist: track.artists.map(artist => artist.name).join(', '), //join multiple artists the a comma\r\n                title: track.name, //title \r\n                albumCover: track.album.images[0].url, // URL of album image\r\n                    caption: caption\r\n            });\r\n\r\n            //prepare song to be saved\r\n            const songData = {\r\n                title: track.name,\r\n                artist: track.artists.map(artist => artist.name).join(', '),\r\n                albumCover: track.album.images[0].url,\r\n                comments: [],\r\n                rating: 0,\r\n                    caption: caption,\r\n            }\r\n\r\n            saveTrackToDatabase(username, songData);\r\n            setPosted(true);\r\n\r\n        }).catch(error => {\r\n            console.log('Error fetching recent track:', error); //log any errors during the call\r\n        });\r\n    };\r\n\r\n    //api that saves the song information in the db\r\n    const saveTrackToDatabase = (username, songData) => {\r\n        console.log(songData);\r\n        axios.post(`http://localhost:8082/api/user/${username}/addPost`, songData)\r\n            .then(response => {\r\n                console.log('Song post saved:', response.data);\r\n                localStorage.setItem(\"postId\", response.data._id);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error saving the song post:', error.response.data);\r\n            });\r\n    };\r\n\r\n    //sets the new comments\r\n    const handleCommentSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newCommentToAdd = {\r\n            id: comments.length + 1,\r\n            username: username,\r\n            body: newComment,\r\n            date: new Date(),\r\n            replies: []\r\n        };\r\n\r\n        setComments([...comments, newCommentToAdd]);\r\n        setNewComment('');\r\n    };\r\n\r\n    //sets the new replies\r\n    const handleReplySubmit = async (commentId, e) => {\r\n        e.preventDefault();\r\n        addReplyToComment(commentId, replyTexts[commentId]);\r\n        setReplyTexts({ ...replyTexts, [commentId]: '' });\r\n    };\r\n\r\n    //adds the reply to the parent comment\r\n    const addReplyToComment = (commentId, replyText) => {\r\n        const updatedComments = comments.map(comment => {\r\n            if (comment.id === commentId) {\r\n                const newReply = {\r\n                    id: comment.replies.length + 1,\r\n                    username: username,\r\n                    body: replyText,\r\n                    date: new Date()\r\n                };\r\n                return { ...comment, replies: [...comment.replies, newReply] };\r\n            }\r\n            return comment;\r\n        });\r\n        setComments(updatedComments);\r\n    };\r\n\r\n\r\n    const handleRatingSubmit = async (rate, postId) => {\r\n        axios.post(`http://localhost:8082/api/posts/${postId}/rate`, { rating: rate })\r\n            .then(response => {\r\n                console.log('Rating submitted:', response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error submitting rating:', error);\r\n            });\r\n    };\r\n\r\n    // Start editing a comment\r\n    const handleEdit = (id) => {\r\n        setEditStatus({ ...editStatus, [id]: true });\r\n        setEditTexts({ ...editTexts, [id]: comments.find(comment => comment.id === id).body });\r\n    };\r\n\r\n    // Cancel editing\r\n    const handleCancel = (id) => {\r\n        setEditStatus({ ...editStatus, [id]: false });\r\n    };\r\n\r\n    // Save the edited comment\r\n    const handleSave = (id) => {\r\n        const updatedComments = comments.map(comment => {\r\n            if (comment.id === id) {\r\n                return { ...comment, body: editTexts[id] };\r\n            }\r\n            return comment;\r\n        });\r\n        setComments(updatedComments);\r\n        setEditStatus({ ...editStatus, [id]: false });\r\n    };\r\n\r\n    const startEditReply = (replyId, currentText) => {\r\n        setEditingReplyId(replyId);\r\n        setEditReplyText({ ...editReplyText, [replyId]: currentText });\r\n    };\r\n\r\n    // Saves the reply changes\r\n    const saveReplyChanges = (replyId) => {\r\n        const updatedComments = comments.map(comment => {\r\n            if (comment.id === replyId) {\r\n                const updatedReplies = comment.replies.map(reply => {\r\n                    if (reply.id === replyId) {\r\n                        return { ...reply, body: editReplyText[replyId] };\r\n                    }\r\n                    return reply;\r\n                });\r\n                return { ...comment, replies: updatedReplies };\r\n            }\r\n            return comment;\r\n        });\r\n        setComments(updatedComments);\r\n        setEditingReplyId(null);\r\n        setEditReplyText({});\r\n    };\r\n\r\n    return (\r\n        <div className=\"home-page\">\r\n            <div className=\"button-container\">\r\n                {!posted && <button onClick={getRecentTrack}>Show Last Played Song</button>}\r\n            </div>\r\n            {recentTrack && (\r\n                <div className=\"post-card\">\r\n                    <div className=\"post-card-content\">\r\n                        <h2 className=\"song-title\">{recentTrack.title}</h2>\r\n                        <h3 className=\"artist-name\">{recentTrack.artist}</h3>\r\n                    </div>\r\n                    <div className=\"post-card-image-container\">\r\n                        <img src={recentTrack.albumCover} alt={`${recentTrack.title} Album Cover`} className=\"post-card-image\" />\r\n                        <StarRating onRating={(rate) => {\r\n                            console.log(rate);\r\n                        }} />\r\n                    </div>\r\n                    <div className=\"post-card-content\">\r\n                        {/* Render the caption input */}\r\n                        {captionRender()}\r\n                        {/* Render existing comments */}\r\n                        <div className=\"comments-container\">\r\n                            {comments.map(comment => (\r\n                                <div key={comment.id} className=\"comment-box\">\r\n                                    {editStatus[comment.id] ? (\r\n                                        <>\r\n                                            <input\r\n                                                value={editTexts[comment.id]}\r\n                                                onChange={(e) => setEditTexts({ ...editTexts, [comment.id]: e.target.value })}\r\n                                            />\r\n                                            <button onClick={() => handleSave(comment.id)}>Save</button>\r\n                                            <button onClick={() => handleCancel(comment.id)}>Cancel</button>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <div className=\"comment-header\">\r\n                                                <strong>{comment.username}</strong>\r\n                                                <p>{comment.body}</p>\r\n                                                <small>{new Date(comment.date).toLocaleString()}</small>\r\n                                                <button className=\"comment-edit-button\" onClick={() => handleEdit(comment.id)}>Edit</button>\r\n                                            </div>\r\n                                            {comment.replies && comment.replies.map(reply => (\r\n                                                <div key={reply.id} className=\"reply-box\">\r\n                                                    <div className=\"reply-content\">\r\n                                                        <strong>{reply.username}</strong>\r\n                                                        {editingReplyId === reply.id ? (\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                value={editReplyText[reply.id] || reply.body}\r\n                                                                onChange={(e) => setEditReplyText({ ...editReplyText, [reply.id]: e.target.value })}\r\n                                                            />\r\n                                                        ) : (\r\n                                                            <p>{reply.body}</p>\r\n                                                        )}\r\n                                                        <small>{new Date(reply.date).toLocaleString()}</small>\r\n                                                        <button className=\"comment-edit-button\" onClick={() => startEditReply(reply.id, reply.body)}>Edit</button>\r\n                                                        {editingReplyId === reply.id && (\r\n                                                            <button onClick={() => saveReplyChanges(reply.id)}>Save</button>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))}\r\n                                            <form onSubmit={(e) => handleReplySubmit(comment.id, e)}>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Reply...\"\r\n                                                    value={replyTexts[comment.id] || ''}\r\n                                                    onChange={(e) => setReplyTexts({ ...replyTexts, [comment.id]: e.target.value })}\r\n                                                />\r\n                                                <button type=\"submit\">Reply</button>\r\n                                            </form>\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <form onSubmit={handleCommentSubmit}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"comment-input\"\r\n                                placeholder=\"Add a comment...\"\r\n                                value={newComment}\r\n                                onChange={(e) => setNewComment(e.target.value)}\r\n                            />\r\n                            <button type=\"submit\" className=\"submit-comment\">Post</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Post;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}