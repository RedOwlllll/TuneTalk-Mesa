{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mesac\\\\OneDrive\\\\Documents\\\\GitHub\\\\TuneTalk\\\\tunetalk\\\\src\\\\pages\\\\Friends.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Friends = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [friends, setFriends] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  // Function to handle sending friend requests\n  const sendFriendRequest = async recipientEmail => {\n    try {\n      const response = await axios.post('/api/friends/request', {\n        requesterEmail: 'user@example.com',\n        // This should be the logged-in user's email\n        recipientEmail\n      });\n      alert('Friend request sent!');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Function to fetch list of friends\n  const fetchFriends = async () => {\n    try {\n      const response = await axios.get(`/api/friends/list/user@example.com`); // Use the logged-in user's email\n      setFriends(response.data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  useEffect(() => {\n    fetchFriends();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friends-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Enter friend's email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendFriendRequest(email),\n      children: \"Add Friend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), friends.map((friend, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: friend.requesterEmail === 'user@example.com' ? friend.recipientEmail : friend.requesterEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Friends, \"D/TWg3mxxZOh7osjzGcAIcjWWLY=\");\n_c = Friends;\nvar _c;\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Friends","_s","email","setEmail","friends","setFriends","error","setError","sendFriendRequest","recipientEmail","response","post","requesterEmail","alert","err","message","fetchFriends","get","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","friend","index","style","color","_c","$RefreshReg$"],"sources":["C:/Users/mesac/OneDrive/Documents/GitHub/TuneTalk/tunetalk/src/pages/Friends.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const Friends = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [friends, setFriends] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    // Function to handle sending friend requests\r\n    const sendFriendRequest = async (recipientEmail) => {\r\n        try {\r\n            const response = await axios.post('/api/friends/request', {\r\n                requesterEmail: 'user@example.com', // This should be the logged-in user's email\r\n                recipientEmail\r\n            });\r\n            alert('Friend request sent!');\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    // Function to fetch list of friends\r\n    const fetchFriends = async () => {\r\n        try {\r\n            const response = await axios.get(`/api/friends/list/user@example.com`); // Use the logged-in user's email\r\n            setFriends(response.data);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchFriends();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"friends-page\">\r\n            <h1>Friends</h1>\r\n            <input\r\n                type=\"text\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Enter friend's email\"\r\n            />\r\n            <button onClick={() => sendFriendRequest(email)}>Add Friend</button>\r\n\r\n            <h2>My Friends</h2>\r\n            {friends.map((friend, index) => (\r\n                <div key={index}>\r\n                    <p>{friend.requesterEmail === 'user@example.com' ? friend.recipientEmail : friend.requesterEmail}</p>\r\n                </div>\r\n            ))}\r\n\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}