{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mesac\\\\OneDrive\\\\Documents\\\\GitHub\\\\TuneTalk\\\\tunetalk\\\\src\\\\UserState.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/* File to check and handle user authentication - will be used for Navigation bar file */\n\nimport React, { createContext, useContext, useState } from 'react';\n\n// Object that represents the initial state of the user.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialUser = {\n  email: '',\n  username: '',\n  spotifyAccount: '',\n  password: '',\n  isAuthenticated: false\n};\n\n/* Passing initialUser object as the default value - if user info \r\n  is not inputted/not found, email and password remain empty and authentication is false.\r\n*/\nconst UserContext = /*#__PURE__*/createContext(initialUser);\n\n// UserProvider component\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(initialUser); // State variable to handle state of the initial user.\n\n  // Wrap children components with the user context provider\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: [user, setUser],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook function to access user context\n_s(UserProvider, \"VrCugiy0UFkwlBI+AwXYBW5CQ4Y=\");\n_c = UserProvider;\nconst useUser = () => {\n  _s2();\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n_s2(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { UserProvider, useUser };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","initialUser","email","username","spotifyAccount","password","isAuthenticated","UserContext","UserProvider","children","_s","user","setUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/mesac/OneDrive/Documents/GitHub/TuneTalk/tunetalk/src/UserState.js"],"sourcesContent":["/* File to check and handle user authentication - will be used for Navigation bar file */\r\n\r\nimport React, { createContext, useContext, useState } from 'react';\r\n\r\n// Object that represents the initial state of the user.\r\nconst initialUser = {\r\n  \r\n  email: '',\r\n  username: '',\r\n  spotifyAccount: '',\r\n  password: '',\r\n  isAuthenticated: false,\r\n};\r\n\r\n/* Passing initialUser object as the default value - if user info \r\n  is not inputted/not found, email and password remain empty and authentication is false.\r\n*/\r\nconst UserContext = createContext(initialUser);\r\n\r\n// UserProvider component\r\nconst UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(initialUser); // State variable to handle state of the initial user.\r\n\r\n  // Wrap children components with the user context provider\r\n  return (\r\n    <UserContext.Provider value={[user, setUser]}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook function to access user context\r\nconst useUser = () => {\r\n  const context = useContext(UserContext);\r\n  if (!context) {\r\n    throw new Error('useUser must be used within a UserProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport { UserProvider, useUser };"],"mappings":";;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG;EAElBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,EAAE;EACZC,cAAc,EAAE,EAAE;EAClBC,QAAQ,EAAE,EAAE;EACZC,eAAe,EAAE;AACnB,CAAC;;AAED;AACA;AACA;AACA,MAAMC,WAAW,gBAAGX,aAAa,CAACK,WAAW,CAAC;;AAE9C;AACA,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAACG,WAAW,CAAC,CAAC,CAAC;;EAE/C;EACA,oBACED,OAAA,CAACO,WAAW,CAACM,QAAQ;IAACC,KAAK,EAAE,CAACH,IAAI,EAAEC,OAAO,CAAE;IAAAH,QAAA,EAC1CA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAR,EAAA,CAXMF,YAAY;AAAAW,EAAA,GAAZX,YAAY;AAYlB,MAAMY,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpB,MAAMC,OAAO,GAAGzB,UAAU,CAACU,WAAW,CAAC;EACvC,IAAI,CAACe,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANID,OAAO;AAQb,SAASZ,YAAY,EAAEY,OAAO;AAAG,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}