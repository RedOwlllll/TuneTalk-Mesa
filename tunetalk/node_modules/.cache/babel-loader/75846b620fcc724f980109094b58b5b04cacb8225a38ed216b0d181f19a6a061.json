{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tabit\\\\OneDrive - AUT University\\\\Documents\\\\GitHub\\\\TuneTalk\\\\tunetalk\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport \"../css/App.css\"; // NOTE: put 2 . (\"..\") since this file is in it's own folder too. \nimport StarRating from \"./StarRating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  //spotify api credentials and endpoints\n  const CLIENT_ID = \"8e2f1c8ec6e14de3b5117923af68adf7\";\n  const REDIRECT_URI = \"http://localhost:3000/home\";\n  const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\";\n  const RESPONSE_TYPE = \"token\";\n  const SCOPES = \"user-read-recently-played\";\n\n  //state hooks to store the token and recent song info\n  const [token, setToken] = useState(\"\");\n  const [recentTrack, setRecentTrack] = useState(null);\n  const [comment, setComment] = useState('');\n  const [caption, setCaption] = useState('');\n\n  //hook to process the authentication token after login\n  useEffect(() => {\n    const hash = window.location.hash;\n    let token = window.localStorage.getItem(\"token\");\n\n    //if no token in storage and there is a hash code, then store it\n    if (!token && hash) {\n      token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\n      window.location.hash = \"\";\n      window.localStorage.setItem(\"token\", token);\n    }\n    setToken(token); //updates the token\n  }, []);\n\n  // function to handle the user logout\n  const logout = () => {\n    setToken(\"\"); // Clear the token from state\n    setRecentTrack(null); // Clear the recent track from state\n    window.localStorage.removeItem(\"token\"); // Remove the token from localStorage\n  };\n\n  // function to construct the spotify login url\n  const getLoginURL = () => {\n    return `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}&scope=${encodeURIComponent(SCOPES)}&show_dialog=true`;\n  };\n  const getRecentTrack = () => {\n    if (!token) {\n      console.log('No token available'); //log an error if no token is available\n      return;\n    }\n\n    //make a get request to the spotify api\n    axios.get('https://api.spotify.com/v1/me/player/recently-played?limit=1', {\n      headers: {\n        'Authorization': `Bearer ${token}` // set the autherization header with the token\n      }\n    }).then(response => {\n      const track = response.data.items[0].track; //extract track info from the response\n      //update the recentTrack state with the track details\n      setRecentTrack({\n        artist: track.artists.map(artist => artist.name).join(', '),\n        //join multiple artists the a comma\n        title: track.name,\n        //title \n        albumCover: track.album.images[0].url // URL of album image\n      });\n    }).catch(error => {\n      console.log('Error fetching recent track:', error); //log any errors during the call\n    });\n  };\n  const handleCommentSubmit = e => {\n    e.preventDefault();\n    console.log(comment);\n    setComment(''); // Clear the comment input after submission\n  };\n\n  //component render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), !token ? /*#__PURE__*/_jsxDEV(\"a\", {\n      href: getLoginURL(),\n      children: \"Login to Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-box\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getRecentTrack,\n          children: \"Show Last Played Song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), recentTrack && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"song-title\",\n          children: recentTrack.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"artist-name\",\n          children: recentTrack.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card-image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recentTrack.albumCover,\n          alt: `${recentTrack.title} Album Cover`,\n          className: \"post-card-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n          onRating: rate => console.log(rate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card-content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCommentSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"comment-input\",\n            placeholder: \"Add a comment...\",\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-comment\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"48h/JXk/Cq95bJHQ/aswZPco/Wo=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","StarRating","jsxDEV","_jsxDEV","Home","_s","CLIENT_ID","REDIRECT_URI","AUTH_ENDPOINT","RESPONSE_TYPE","SCOPES","token","setToken","recentTrack","setRecentTrack","comment","setComment","caption","setCaption","hash","window","location","localStorage","getItem","substring","split","find","elem","startsWith","setItem","logout","removeItem","getLoginURL","encodeURIComponent","getRecentTrack","console","log","get","headers","then","response","track","data","items","artist","artists","map","name","join","title","albumCover","album","images","url","catch","error","handleCommentSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","src","alt","onRating","rate","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/tabit/OneDrive - AUT University/Documents/GitHub/TuneTalk/tunetalk/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport \"../css/App.css\"; // NOTE: put 2 . (\"..\") since this file is in it's own folder too. \r\nimport StarRating from \"./StarRating\";\r\n\r\nfunction Home() {\r\n\r\n    //spotify api credentials and endpoints\r\n    const CLIENT_ID = \"8e2f1c8ec6e14de3b5117923af68adf7\"\r\n    const REDIRECT_URI = \"http://localhost:3000/home\"\r\n    const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\"\r\n    const RESPONSE_TYPE = \"token\"\r\n    const SCOPES = \"user-read-recently-played\";\r\n\r\n    //state hooks to store the token and recent song info\r\n    const [token, setToken] = useState(\"\")\r\n    const [recentTrack, setRecentTrack] = useState(null)\r\n    const [comment, setComment] = useState('');\r\n    const [caption, setCaption] = useState('');\r\n\r\n    //hook to process the authentication token after login\r\n    useEffect(() => {\r\n        const hash = window.location.hash;\r\n        let token = window.localStorage.getItem(\"token\");\r\n\r\n        //if no token in storage and there is a hash code, then store it\r\n        if (!token && hash) {\r\n            token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\r\n            window.location.hash = \"\";\r\n            window.localStorage.setItem(\"token\", token);\r\n        }\r\n\r\n        setToken(token); //updates the token\r\n    }, []);\r\n\r\n    // function to handle the user logout\r\n    const logout = () => {\r\n        setToken(\"\"); // Clear the token from state\r\n        setRecentTrack(null); // Clear the recent track from state\r\n        window.localStorage.removeItem(\"token\"); // Remove the token from localStorage\r\n    };\r\n\r\n    // function to construct the spotify login url\r\n    const getLoginURL = () => {\r\n        return `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}&scope=${encodeURIComponent(SCOPES)}&show_dialog=true`;\r\n    }\r\n\r\n    const getRecentTrack = () => {\r\n        if (!token) {\r\n            console.log('No token available'); //log an error if no token is available\r\n            return;\r\n        }\r\n\r\n        //make a get request to the spotify api\r\n        axios.get('https://api.spotify.com/v1/me/player/recently-played?limit=1', {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}` // set the autherization header with the token\r\n            }\r\n        })\r\n            .then(response => {\r\n                const track = response.data.items[0].track; //extract track info from the response\r\n                //update the recentTrack state with the track details\r\n                setRecentTrack({\r\n                    artist: track.artists.map(artist => artist.name).join(', '), //join multiple artists the a comma\r\n                    title: track.name, //title \r\n                    albumCover: track.album.images[0].url // URL of album image\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log('Error fetching recent track:', error); //log any errors during the call\r\n            });\r\n    };\r\n\r\n    const handleCommentSubmit = (e) => {\r\n        e.preventDefault(); \r\n\r\n\r\n        console.log(comment);\r\n\r\n        setComment(''); // Clear the comment input after submission\r\n    };\r\n\r\n    //component render\r\n    return (\r\n        <div className=\"home-page\">\r\n            <h1>Home</h1>\r\n            {!token ?\r\n                <a href={getLoginURL()}>Login to Spotify</a>\r\n                : <button onClick={logout}>Logout</button>}\r\n\r\n            <div className=\"button-container\">\r\n                <div className=\"button-box\">\r\n                    <button onClick={getRecentTrack}>Show Last Played Song</button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Display the recent track information */}\r\n            {recentTrack && (\r\n                <div className=\"post-card\">\r\n                    <div className=\"post-card-content\">\r\n                        <h2 className=\"song-title\">{recentTrack.title}</h2>\r\n                        <h3 className=\"artist-name\">{recentTrack.artist}</h3>\r\n                    </div>\r\n                    <div className=\"post-card-image-container\">\r\n                        <img src={recentTrack.albumCover} alt={`${recentTrack.title} Album Cover`} className=\"post-card-image\" />\r\n                        <StarRating onRating={(rate) => console.log(rate)} />\r\n                    </div>\r\n                    <div className=\"post-card-content\">\r\n                        {/* Comment form */}\r\n                        <form onSubmit={handleCommentSubmit}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"comment-input\"\r\n                                placeholder=\"Add a comment...\"\r\n                                value={comment}\r\n                                onChange={(e) => setComment(e.target.value)}\r\n                            />\r\n                            {/* <input\r\n                                type=\"text\"\r\n                                className=\"caption-input\"\r\n                                placeholder=\"Post a caption\"\r\n                                value={caption}\r\n                                onChange={(e) => setCaption(e.target.value)}\r\n                            /> */}\r\n                            <button type=\"submit\" className=\"submit-comment\">Post</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}