{"ast":null,"code":"var _jsxFileName = \"/Users/joelhillmann/Documents/GitHub/TuneTalk/tunetalk/src/pages/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport \"../css/App.css\"; // NOTE: put 2 . (\"..\") since this file is in it's own folder too. \nimport \"../css/Post.css\";\nimport StarRating from \"./StarRating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const handleCommentSubmit = (e, username, newComment, setComments, setNewComment) => {\n  console.log(\"testers for the comment section\");\n  e.preventDefault();\n  const commentData = {\n    text: newComment,\n    user: username\n  };\n};\nfunction Post() {\n  _s();\n  const [recentTrack, setRecentTrack] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const token = localStorage.getItem(\"access_token\");\n  const username = localStorage.getItem(\"userlogin\");\n  console.log(username);\n  const getRecentTrack = () => {\n    if (!token) {\n      console.log('No token available'); //log an error if no token is available\n      return;\n    }\n\n    //make a get request to the spotify api\n    axios.get('https://api.spotify.com/v1/me/player/recently-played?limit=1', {\n      headers: {\n        'Authorization': `Bearer ${token}` // set the autherization header with the token\n      }\n    }).then(response => {\n      const track = response.data.items[0].track; //extract track info from the response\n\n      //update the recentTrack state with the track details\n      setRecentTrack({\n        artist: track.artists.map(artist => artist.name).join(', '),\n        //join multiple artists the a comma\n        title: track.name,\n        //title \n        albumCover: track.album.images[0].url // URL of album image\n      });\n\n      //prepare song to be saved\n      const songData = {\n        title: track.name,\n        artist: track.artists.map(artist => artist.name).join(', '),\n        albumCover: track.album.images[0].url,\n        comments: [],\n        rating: StarRating\n      };\n      saveTrackToDatabase(username, songData);\n    }).catch(error => {\n      console.log('Error fetching recent track:', error); //log any errors during the call\n    });\n  };\n  const saveTrackToDatabase = (username, songData) => {\n    console.log(songData);\n    axios.post(`http://localhost:8082/api/user/${username}/addPost`, songData).then(response => {\n      console.log('Song post saved:', response.data);\n    }).catch(error => {\n      console.error('Error saving the song post:', error.response.data);\n    });\n  };\n\n  // component render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-box\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getRecentTrack,\n          children: \"Show Last Played Song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), recentTrack && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"song-title\",\n          children: recentTrack.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"artist-name\",\n          children: recentTrack.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card-image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recentTrack.albumCover,\n          alt: `${recentTrack.title} Album Cover`,\n          className: \"post-card-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n          onRating: rate => console.log(rate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-container\",\n          children: comments.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: c.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: new Date(c.date).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)]\n          }, c.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCommentSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"comment-input\",\n            placeholder: \"Add a comment...\",\n            value: newComment,\n            onChange: e => setNewComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-comment\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_s(Post, \"35Mg0UBgk1dT4aPhygexBnyDl7U=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","axios","StarRating","jsxDEV","_jsxDEV","handleCommentSubmit","e","username","newComment","setComments","setNewComment","console","log","preventDefault","commentData","text","user","Post","_s","recentTrack","setRecentTrack","comments","token","localStorage","getItem","getRecentTrack","get","headers","then","response","track","data","items","artist","artists","map","name","join","title","albumCover","album","images","url","songData","rating","saveTrackToDatabase","catch","error","post","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onRating","rate","c","body","Date","date","toLocaleString","id","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/joelhillmann/Documents/GitHub/TuneTalk/tunetalk/src/pages/Post.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport \"../css/App.css\"; // NOTE: put 2 . (\"..\") since this file is in it's own folder too. \nimport \"../css/Post.css\";\nimport StarRating from \"./StarRating\";\n\nexport const handleCommentSubmit = (e, username, newComment, setComments, setNewComment) => {\n\n    console.log(\"testers for the comment section\")\n    e.preventDefault(); \n\n    const commentData = {\n        text: newComment,\n        user: username\n    };\n\n};\n\n\nfunction Post() {\n\n    const [recentTrack, setRecentTrack] = useState(null);\n    const [comments, setComments] = useState([]);\n    const [newComment, setNewComment] = useState('');\n    \n    const token = localStorage.getItem(\"access_token\");\n    const username = localStorage.getItem(\"userlogin\");\n\n    console.log(username);\n  \n\n    const getRecentTrack = () => {\n\n\n        if (!token) {\n            console.log('No token available'); //log an error if no token is available\n            return;\n        }\n\n        //make a get request to the spotify api\n        axios.get('https://api.spotify.com/v1/me/player/recently-played?limit=1', {\n            headers: {\n                'Authorization': `Bearer ${token}` // set the autherization header with the token\n            }\n        }).then(response => {\n                const track = response.data.items[0].track; //extract track info from the response\n    \n                //update the recentTrack state with the track details\n                setRecentTrack({\n                    artist: track.artists.map(artist => artist.name).join(', '), //join multiple artists the a comma\n                    title: track.name, //title \n                    albumCover: track.album.images[0].url // URL of album image\n                });\n \n                //prepare song to be saved\n                const songData = {\n                    title: track.name,\n                    artist: track.artists.map(artist => artist.name).join(', '),\n                    albumCover: track.album.images[0].url,                    \n                    comments: [],\n                    rating: StarRating,\n                }\n                \n                saveTrackToDatabase(username, songData);\n\n            }).catch(error => {\n                console.log('Error fetching recent track:', error); //log any errors during the call\n            });\n    };\n\n    const saveTrackToDatabase = (username, songData) => {\n        console.log(songData);\n        axios.post(`http://localhost:8082/api/user/${username}/addPost`, songData )\n          .then(response => {\n            console.log('Song post saved:', response.data);\n          })\n          .catch(error => {\n            console.error('Error saving the song post:', error.response.data);\n          });\n        };\n\n    \n\n       \n\n    // component render\n    return (\n        <div className=\"home-page\">\n            {/* {!token ?\n                <a href={getLoginURL()}>Login to Spotify</a>\n                : <button onClick={logout}>Logout</button>} */}\n\n            <div className=\"button-container\">\n                <div className=\"button-box\">\n                    <button onClick={getRecentTrack}>Show Last Played Song</button>\n                </div>\n            </div>\n\n            {/* Display the recent track information */}\n            {recentTrack && (\n                <div className=\"post-card\">\n                    <div className=\"post-card-content\">\n                        <h2 className=\"song-title\">{recentTrack.title}</h2>\n                        <h3 className=\"artist-name\">{recentTrack.artist}</h3>\n                    </div>\n                    <div className=\"post-card-image-container\">\n                        <img src={recentTrack.albumCover} alt={`${recentTrack.title} Album Cover`} className=\"post-card-image\" />\n                        <StarRating onRating={(rate) => console.log(rate)} />\n                    </div>\n                    <div className=\"post-card-content\">\n                        {/* Render existing comments */}\n                        <div className=\"comments-container\">\n                        {comments.map((c) => (\n                            <div key={c.id} className=\"comment\">\n                                <p>{c.body}</p>\n                                <small>{new Date(c.date).toLocaleString()}</small>\n                            </div>\n                        ))}\n                        </div>\n                        {/* Comment form */}\n                        <form onSubmit={handleCommentSubmit}>\n                            <input\n                                type=\"text\"\n                                className=\"comment-input\"\n                                placeholder=\"Add a comment...\"\n                                value={newComment}\n                                onChange={(e) => setNewComment(e.target.value)}\n                            />\n                            <button type=\"submit\" className=\"submit-comment\">Post</button>\n                        </form>\n                    </div>\n                \n                </div>\n            )}\n        </div> \n    );\n}\n\n\n\nexport default Post;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}