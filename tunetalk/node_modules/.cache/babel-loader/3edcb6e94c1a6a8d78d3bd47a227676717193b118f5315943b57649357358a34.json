{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mesac\\\\OneDrive\\\\Documents\\\\GitHub\\\\TuneTalk\\\\tunetalk\\\\src\\\\pages\\\\Friends.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useUser } from \"../UserState\"; // Import useUser from your UserState\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Friends = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [friends, setFriends] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useUser(); // Get user from context\n\n  // Function to handle sending friend requests\n  const sendFriendRequest = async recipientEmail => {\n    try {\n      const response = await axios.post('http://localhost:8082/api/friends/request', {\n        requesterEmail: user.email,\n        // Use email from context\n        recipientEmail\n      });\n      alert('Friend request sent!');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Function to fetch list of friends using the logged-in user's email\n  const fetchFriends = async () => {\n    try {\n      if (user.email) {\n        // Check if email is available\n        const response = await axios.get(`http://localhost:8082/api/friends/list/${encodeURIComponent(user.email)}`);\n        setFriends(response.data);\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Function to fetch pending friend requests\n  const fetchPendingRequests = async () => {\n    try {\n      // Update the endpoint as necessary\n      const response = await axios.get(`http://localhost:8082/api/friends/requests/${encodeURIComponent(user.email)}`);\n      setPendingRequests(response.data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Function to handle accepting friend requests\n  const acceptFriendRequest = async friendId => {\n    try {\n      const response = await axios.put('http://localhost:8082/api/friends/response', {\n        friendId,\n        status: 'accepted'\n      });\n      // Optionally refresh the list of friends or update the state to reflect the changes\n      fetchFriends();\n      // Handle any additional UI updates or notifications here\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const declineFriendRequest = async friendId => {\n    try {\n      const response = await axios.put('http://localhost:8082/api/friends/response', {\n        friendId,\n        status: 'declined'\n      });\n      // Optionally refresh the list of friends or update the state to reflect the changes\n      fetchFriends();\n      // Handle any additional UI updates or notifications here\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  useEffect(() => {\n    fetchFriends();\n    fetchPendingRequests();\n  }, [user.email]); // Dependency on user.email\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friends-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Enter friend's email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendFriendRequest(email),\n      children: \"Add Friend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pending Friend Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), pendingRequests.map((request, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: request.requesterEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => acceptFriendRequest(request._id),\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => declineFriendRequest(request._id),\n        children: \"Decline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), friends.map((friend, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: friend.requesterEmail === user.email ? friend.recipientEmail : friend.requesterEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this)), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(Friends, \"k9HU9OY80pM4xfMeW/M1K6P1/MM=\", false, function () {\n  return [useUser];\n});\n_c = Friends;\nvar _c;\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"names":["React","useState","useEffect","axios","useUser","jsxDEV","_jsxDEV","Friends","_s","email","setEmail","friends","setFriends","error","setError","user","setUser","sendFriendRequest","recipientEmail","response","post","requesterEmail","alert","err","message","fetchFriends","get","encodeURIComponent","data","fetchPendingRequests","setPendingRequests","acceptFriendRequest","friendId","put","status","declineFriendRequest","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","pendingRequests","map","request","index","_id","friend","style","color","_c","$RefreshReg$"],"sources":["C:/Users/mesac/OneDrive/Documents/GitHub/TuneTalk/tunetalk/src/pages/Friends.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useUser } from \"../UserState\";  // Import useUser from your UserState\r\n\r\nexport const Friends = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [friends, setFriends] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [user, setUser] = useUser();  // Get user from context\r\n\r\n    // Function to handle sending friend requests\r\n    const sendFriendRequest = async (recipientEmail) => {\r\n        try {\r\n            const response = await axios.post('http://localhost:8082/api/friends/request', {\r\n                requesterEmail: user.email,  // Use email from context\r\n                recipientEmail\r\n            });\r\n            alert('Friend request sent!');\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    // Function to fetch list of friends using the logged-in user's email\r\n    const fetchFriends = async () => {\r\n        try {\r\n            if (user.email) {  // Check if email is available\r\n                const response = await axios.get(`http://localhost:8082/api/friends/list/${encodeURIComponent(user.email)}`);\r\n                setFriends(response.data);\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    // Function to fetch pending friend requests\r\n    const fetchPendingRequests = async () => {\r\n        try {\r\n            // Update the endpoint as necessary\r\n            const response = await axios.get(`http://localhost:8082/api/friends/requests/${encodeURIComponent(user.email)}`);\r\n            setPendingRequests(response.data);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    // Function to handle accepting friend requests\r\n    const acceptFriendRequest = async (friendId) => {\r\n        try {\r\n            const response = await axios.put('http://localhost:8082/api/friends/response', {\r\n                friendId,\r\n                status: 'accepted'\r\n            });\r\n            // Optionally refresh the list of friends or update the state to reflect the changes\r\n            fetchFriends();\r\n            // Handle any additional UI updates or notifications here\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const declineFriendRequest = async (friendId) => {\r\n        try {\r\n            const response = await axios.put('http://localhost:8082/api/friends/response', {\r\n                friendId,\r\n                status: 'declined'\r\n            });\r\n            // Optionally refresh the list of friends or update the state to reflect the changes\r\n            fetchFriends();\r\n            // Handle any additional UI updates or notifications here\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchFriends();\r\n        fetchPendingRequests();\r\n    }, [user.email]);  // Dependency on user.email\r\n\r\n    return (\r\n        <div className=\"friends-page\">\r\n            <h1>Friends</h1>\r\n            <input\r\n                type=\"text\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Enter friend's email\"\r\n            />\r\n            <button onClick={() => sendFriendRequest(email)}>Add Friend</button>\r\n\r\n            <h2>Pending Friend Requests</h2>\r\n            {pendingRequests.map((request, index) => (\r\n                <div key={index}>\r\n                    <p>{request.requesterEmail}</p>\r\n                    <button onClick={() => acceptFriendRequest(request._id)}>Accept</button>\r\n                    <button onClick={() => declineFriendRequest(request._id)}>Decline</button>\r\n                </div>\r\n            ))}\r\n\r\n            <h2>My Friends</h2>\r\n            {friends.map((friend, index) => (\r\n                <div key={index}>\r\n                    <p>{friend.requesterEmail === user.email ? friend.recipientEmail : friend.requesterEmail}</p>\r\n                </div>\r\n            ))}\r\n\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        </div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}