{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mesac\\\\OneDrive\\\\Documents\\\\GitHub\\\\TuneTalk\\\\tunetalk\\\\src\\\\pages\\\\Friends.js\",\n  _s = $RefreshSig$();\n// Friends.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useUser } from '../UserState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Friends = () => {\n  _s();\n  const [friendEmail, setFriendEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [user] = useUser();\n  const handleAddFriend = async () => {\n    if (!friendEmail) {\n      setMessage('Please enter a valid email.');\n      return;\n    }\n    try {\n      const res = await axios.post('http://localhost:8082/api/addFriend', {\n        user: user.email,\n        // The email of the current user\n        friendEmail: friendEmail // The email of the user to add as a friend\n      });\n      if (res.data.status === 'ok') {\n        setMessage('Friend request sent!');\n      } else {\n        setMessage(res.data.error);\n      }\n    } catch (error) {\n      console.error('There was an error sending the friend request', error);\n      setMessage('Failed to send friend request.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a Friend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: friendEmail,\n      onChange: e => setFriendEmail(e.target.value),\n      type: \"email\",\n      placeholder: \"Enter friend's email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddFriend,\n      children: \"Add Friend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Friends, \"2H2fjB3vmAqegSvqpXV2yVN8sPg=\", false, function () {\n  return [useUser];\n});\n_c = Friends;\nexport default Friends;\nvar _c;\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"names":["React","useState","axios","useUser","jsxDEV","_jsxDEV","Friends","_s","friendEmail","setFriendEmail","message","setMessage","user","handleAddFriend","res","post","email","data","status","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mesac/OneDrive/Documents/GitHub/TuneTalk/tunetalk/src/pages/Friends.js"],"sourcesContent":["// Friends.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useUser } from '../UserState';\r\n\r\nconst Friends = () => {\r\n  const [friendEmail, setFriendEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [user] = useUser();\r\n\r\n  const handleAddFriend = async () => {\r\n    if (!friendEmail) {\r\n      setMessage('Please enter a valid email.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:8082/api/addFriend', {\r\n        user: user.email, // The email of the current user\r\n        friendEmail: friendEmail, // The email of the user to add as a friend\r\n      });\r\n\r\n      if (res.data.status === 'ok') {\r\n        setMessage('Friend request sent!');\r\n      } else {\r\n        setMessage(res.data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('There was an error sending the friend request', error);\r\n      setMessage('Failed to send friend request.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add a Friend</h2>\r\n      <input\r\n        value={friendEmail}\r\n        onChange={(e) => setFriendEmail(e.target.value)}\r\n        type=\"email\"\r\n        placeholder=\"Enter friend's email\"\r\n        required\r\n      />\r\n      <button onClick={handleAddFriend}>Add Friend</button>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Friends;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,IAAI,CAAC,GAAGT,OAAO,CAAC,CAAC;EAExB,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACL,WAAW,EAAE;MAChBG,UAAU,CAAC,6BAA6B,CAAC;MACzC;IACF;IAEA,IAAI;MACF,MAAMG,GAAG,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,qCAAqC,EAAE;QAClEH,IAAI,EAAEA,IAAI,CAACI,KAAK;QAAE;QAClBR,WAAW,EAAEA,WAAW,CAAE;MAC5B,CAAC,CAAC;MAEF,IAAIM,GAAG,CAACG,IAAI,CAACC,MAAM,KAAK,IAAI,EAAE;QAC5BP,UAAU,CAAC,sBAAsB,CAAC;MACpC,CAAC,MAAM;QACLA,UAAU,CAACG,GAAG,CAACG,IAAI,CAACE,KAAK,CAAC;MAC5B;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACrER,UAAU,CAAC,gCAAgC,CAAC;IAC9C;EACF,CAAC;EAED,oBACEN,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpB,OAAA;MACEqB,KAAK,EAAElB,WAAY;MACnBmB,QAAQ,EAAGC,CAAC,IAAKnB,cAAc,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAChDI,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,sBAAsB;MAClCC,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFpB,OAAA;MAAQ4B,OAAO,EAAEpB,eAAgB;MAAAQ,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpDf,OAAO,iBAAIL,OAAA;MAAAgB,QAAA,EAAIX;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAAClB,EAAA,CA1CID,OAAO;EAAA,QAGIH,OAAO;AAAA;AAAA+B,EAAA,GAHlB5B,OAAO;AA4Cb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}