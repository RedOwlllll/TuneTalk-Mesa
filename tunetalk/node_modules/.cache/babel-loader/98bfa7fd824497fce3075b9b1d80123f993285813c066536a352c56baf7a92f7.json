{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maxin\\\\Documents\\\\GitHub\\\\TuneTalk\\\\tunetalk\\\\src\\\\pages\\\\CommunityGenres\\\\RNB.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FaCheck, FaPlus } from 'react-icons/fa'; // FontAwesome icons\nimport '../../css/Community.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"a8c9857ace8449f290ed14c54c878e1f\";\nconst CLIENT_SECRET = \"c747a0da53124c4ba8bc12a0e88d859b\";\nfunction RNB() {\n  _s();\n  const [isFollowing, setIsFollowing] = useState(false);\n  const [accessToken, setAccessToken] = useState('');\n  const [RNBPlaylists, setRNBPlaylists] = useState([]);\n  const [randomTrack, setRandomTrack] = useState(null);\n  useEffect(() => {\n    // Function to retrieve the access token\n    const getAccessToken = async () => {\n      const authParameters = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: `grant_type=client_credentials&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\n      };\n      const response = await fetch('https://accounts.spotify.com/api/token', authParameters);\n      const data = await response.json();\n      setAccessToken(data.access_token);\n    };\n    getAccessToken();\n  }, []);\n  useEffect(() => {\n    // Function to fetch RNB playlists using the access token\n    const fetchRNBMusic = async () => {\n      if (!accessToken) return;\n      const response = await fetch('https://api.spotify.com/v1/browse/categories/RNB/playlists', {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setRNBPlaylists(data.playlists.items);\n      if (data.playlists.items.length > 0) {\n        const playlistId = data.playlists.items[0].id;\n        const tracksResponse = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n          headers: {\n            'Authorization': `Bearer ${accessToken}`\n          }\n        });\n        const tracksData = await tracksResponse.json();\n        if (tracksData.items.length > 0) {\n          const randomIndex = Math.floor(Math.random() * tracksData.items.length);\n          setRandomTrack(tracksData.items[randomIndex].track);\n        }\n      }\n    };\n    fetchRNBMusic().catch(error => {\n      console.error('Fetching RNB playlists failed:', error);\n    });\n  }, [accessToken]); // This effect depends on the accessToken state\n\n  const handleFollowClick = () => {\n    setIsFollowing(!isFollowing);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RNB Music\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFollowClick,\n      className: \"follow-button\",\n      children: isFollowing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 30\n        }, this), \" Following\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 59\n        }, this), \" Follow\"]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this), randomTrack && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"featured-track-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todays Featured Track: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: randomTrack.album.images[0].url,\n          alt: randomTrack.name,\n          className: \"track-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"track-title\",\n            children: randomTrack.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"track-artist\",\n            children: [\"by \", randomTrack.artists.map(artist => artist.name).join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlists-container\",\n      children: RNBPlaylists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: playlist.images[0].url,\n          alt: playlist.name,\n          className: \"playlist-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlist-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: playlist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: playlist.external_urls.spotify,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"playlist-link\",\n            children: \"Listen on Spotify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, playlist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(RNB, \"fmhlNVQYW3+pldPCGRL9VSy0M4M=\");\n_c = RNB;\nexport default RNB;\nvar _c;\n$RefreshReg$(_c, \"RNB\");","map":{"version":3,"names":["React","useState","useEffect","FaCheck","FaPlus","jsxDEV","_jsxDEV","Fragment","_Fragment","CLIENT_ID","CLIENT_SECRET","RNB","_s","isFollowing","setIsFollowing","accessToken","setAccessToken","RNBPlaylists","setRNBPlaylists","randomTrack","setRandomTrack","getAccessToken","authParameters","method","headers","body","response","fetch","data","json","access_token","fetchRNBMusic","ok","Error","status","playlists","items","length","playlistId","id","tracksResponse","tracksData","randomIndex","Math","floor","random","track","catch","error","console","handleFollowClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","album","images","url","alt","name","artists","map","artist","join","playlist","href","external_urls","spotify","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/maxin/Documents/GitHub/TuneTalk/tunetalk/src/pages/CommunityGenres/RNB.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FaCheck, FaPlus } from 'react-icons/fa'; // FontAwesome icons\r\nimport '../../css/Community.css';\r\n\r\nconst CLIENT_ID = \"a8c9857ace8449f290ed14c54c878e1f\";\r\nconst CLIENT_SECRET = \"c747a0da53124c4ba8bc12a0e88d859b\";\r\n\r\nfunction RNB() {\r\n    const [isFollowing, setIsFollowing] = useState(false);\r\n    const [accessToken, setAccessToken] = useState('');\r\n    const [RNBPlaylists, setRNBPlaylists] = useState([]);\r\n    const [randomTrack, setRandomTrack] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        // Function to retrieve the access token\r\n        const getAccessToken = async () => {\r\n            const authParameters = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                body: `grant_type=client_credentials&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`,\r\n            };\r\n\r\n            const response = await fetch('https://accounts.spotify.com/api/token', authParameters);\r\n            const data = await response.json();\r\n            setAccessToken(data.access_token);\r\n        };\r\n\r\n        getAccessToken();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Function to fetch RNB playlists using the access token\r\n        const fetchRNBMusic = async () => {\r\n            if (!accessToken) return;\r\n\r\n            const response = await fetch('https://api.spotify.com/v1/browse/categories/RNB/playlists', {\r\n                headers: { 'Authorization': `Bearer ${accessToken}` },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            setRNBPlaylists(data.playlists.items);\r\n\r\n            if (data.playlists.items.length > 0) {\r\n              const playlistId = data.playlists.items[0].id;\r\n              const tracksResponse = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\r\n                  headers: { 'Authorization': `Bearer ${accessToken}` },\r\n              });\r\n              const tracksData = await tracksResponse.json();\r\n              if (tracksData.items.length > 0) {\r\n                  const randomIndex = Math.floor(Math.random() * tracksData.items.length);\r\n                  setRandomTrack(tracksData.items[randomIndex].track);\r\n              }\r\n          }\r\n        };\r\n\r\n        fetchRNBMusic().catch(error => {\r\n            console.error('Fetching RNB playlists failed:', error);\r\n        });\r\n    }, [accessToken]); // This effect depends on the accessToken state\r\n\r\n    const handleFollowClick = () => {\r\n        setIsFollowing(!isFollowing);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-page\">\r\n          <h1>RNB Music</h1>\r\n          <button onClick={handleFollowClick} className=\"follow-button\">\r\n            {isFollowing ? <><FaCheck /> Following</> : <><FaPlus /> Follow</>}\r\n          </button>\r\n          {randomTrack && (\r\n            <div className=\"featured-track-container\">\r\n                <h2>Todays Featured Track: </h2>\r\n                <div className=\"track-card\">\r\n                    <img src={randomTrack.album.images[0].url} alt={randomTrack.name} className=\"track-image\" />\r\n                    <div className=\"track-info\">\r\n                        <p className=\"track-title\">{randomTrack.name}</p>\r\n                        <p className=\"track-artist\">by {randomTrack.artists.map(artist => artist.name).join(', ')}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          )}\r\n          <div className=\"playlists-container\">\r\n            {RNBPlaylists.map((playlist) => (\r\n              <div key={playlist.id} className=\"playlist-card\">\r\n                <img src={playlist.images[0].url} alt={playlist.name} className=\"playlist-image\" />\r\n                <div className=\"playlist-info\">\r\n                  <h3>{playlist.name}</h3>\r\n                  <a href={playlist.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\" className=\"playlist-link\">Listen on Spotify</a>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default RNB;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}