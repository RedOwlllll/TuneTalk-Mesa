{"ast":null,"code":"var _jsxFileName = \"/Users/joelhillmann/Documents/GitHub/TuneTalk/tunetalk/src/pages/CommunityGenres/Indie.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FaCheck, FaPlus } from 'react-icons/fa'; // FontAwesome icons\nimport '../../css/Community.css';\nimport { useUser } from \"../../authentication/UserState\";\nimport axios from \"axios\";\nimport StarRating from '../StarRating';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"a8c9857ace8449f290ed14c54c878e1f\";\nconst CLIENT_SECRET = \"c747a0da53124c4ba8bc12a0e88d859b\";\nfunction Indie() {\n  _s();\n  const [isFollowing, setIsFollowing] = useState(false);\n  const [accessToken, setAccessToken] = useState('');\n  const [IndiePlaylists, setIndiePlaylists] = useState([]);\n  const [randomTrack, setRandomTrack] = useState(null);\n  const [user] = useUser();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [replyTexts, setReplyTexts] = useState({});\n  const username = localStorage.getItem(\"userlogin\");\n  const [editStatus, setEditStatus] = useState({});\n  const [editTexts, setEditTexts] = useState({});\n  const [editingReplyId, setEditingReplyId] = useState(null);\n  const [editReplyText, setEditReplyText] = useState({});\n  const handleFollowClick = async () => {\n    if (!isFollowing) {\n      try {\n        await axios.post(`http://localhost:8082/api/community/follow/${encodeURIComponent(user.email)}`, {\n          community: 'indie',\n          followStatus: true\n        });\n        setIsFollowing(true);\n      } catch (err) {\n        console.error(\"Error updating follow status:\", err);\n      }\n    } else {\n      try {\n        await axios.post(`http://localhost:8082/api/community/un-follow/${encodeURIComponent(user.email)}`, {\n          community: 'indie',\n          followStatus: false\n        });\n        setIsFollowing(false);\n      } catch (err) {\n        console.error(\"Error updating un-follow status:\", err);\n      }\n    }\n  };\n  const fetchFollowStatus = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8082/api/community/status/${encodeURIComponent(user.email)}`);\n      setIsFollowing(response.data.Indie); // assuming the response data structure matches your expectations\n    } catch (err) {\n      console.error(\"Error fetching follow status:\", err);\n    }\n  };\n  const fetchInitialFollow = async () => {\n    try {\n      await axios.post(`http://localhost:8082/api/community/initiate-follows/${encodeURIComponent(user.email)}`);\n    } catch (err) {\n      console.error(\"Error initializing follow record:\", err);\n    }\n  };\n  useEffect(() => {\n    // Function to retrieve the access token\n    const getAccessToken = async () => {\n      const authParameters = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: `grant_type=client_credentials&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\n      };\n      const response = await fetch('https://accounts.spotify.com/api/token', authParameters);\n      const data = await response.json();\n      setAccessToken(data.access_token);\n    };\n    getAccessToken();\n  }, []);\n  useEffect(() => {\n    // Function to fetch Indie playlists using the access token\n    const fetchIndieMusic = async () => {\n      if (!accessToken) return;\n      const response = await fetch('https://api.spotify.com/v1/browse/categories/Indie/playlists', {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setIndiePlaylists(data.playlists.items);\n      if (data.playlists.items.length > 0) {\n        const playlistId = data.playlists.items[0].id;\n        const tracksResponse = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n          headers: {\n            'Authorization': `Bearer ${accessToken}`\n          }\n        });\n        const tracksData = await tracksResponse.json();\n        if (tracksData.items.length > 0) {\n          const randomIndex = Math.floor(Math.random() * tracksData.items.length);\n          setRandomTrack(tracksData.items[randomIndex].track);\n        }\n      }\n    };\n    fetchIndieMusic().catch(error => {\n      console.error('Fetching Indie playlists failed:', error);\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (user.email) {\n      fetchInitialFollow();\n      fetchFollowStatus();\n    }\n    // eslint-disable-next-line\n  }, [user.email]); // This effect depends on user.email\n\n  // ALL BLAKES CODE\n\n  //sets the new comments\n  const handleCommentSubmit = e => {\n    e.preventDefault();\n    const newCommentToAdd = {\n      id: comments.length + 1,\n      username: username,\n      body: newComment,\n      date: new Date(),\n      replies: []\n    };\n    setComments([...comments, newCommentToAdd]);\n    setNewComment('');\n  };\n\n  //sets the new replies\n  const handleReplySubmit = async (commentId, e) => {\n    e.preventDefault();\n    addReplyToComment(commentId, replyTexts[commentId]);\n    setReplyTexts({\n      ...replyTexts,\n      [commentId]: ''\n    });\n  };\n\n  //adds the reply to the parent comment\n  const addReplyToComment = (commentId, replyText) => {\n    const updatedComments = comments.map(comment => {\n      if (comment.id === commentId) {\n        const newReply = {\n          id: comment.replies.length + 1,\n          username: username,\n          body: replyText,\n          date: new Date()\n        };\n        return {\n          ...comment,\n          replies: [...comment.replies, newReply]\n        };\n      }\n      return comment;\n    });\n    setComments(updatedComments);\n  };\n\n  // Start editing a comment\n  const handleEdit = id => {\n    setEditStatus({\n      ...editStatus,\n      [id]: true\n    });\n    setEditTexts({\n      ...editTexts,\n      [id]: comments.find(comment => comment.id === id).body\n    });\n  };\n\n  // Cancel editing\n  const handleCancel = id => {\n    setEditStatus({\n      ...editStatus,\n      [id]: false\n    });\n  };\n\n  // Save the edited comment\n  const handleSave = id => {\n    const updatedComments = comments.map(comment => {\n      if (comment.id === id) {\n        return {\n          ...comment,\n          body: editTexts[id]\n        };\n      }\n      return comment;\n    });\n    setComments(updatedComments);\n    setEditStatus({\n      ...editStatus,\n      [id]: false\n    });\n  };\n  const startEditReply = (replyId, currentText) => {\n    setEditingReplyId(replyId);\n    setEditReplyText({\n      ...editReplyText,\n      [replyId]: currentText\n    });\n  };\n  const saveReplyChanges = replyId => {\n    const updatedComments = comments.map(comment => {\n      if (comment.id === replyId) {\n        const updatedReplies = comment.replies.map(reply => {\n          if (reply.id === replyId) {\n            return {\n              ...reply,\n              body: editReplyText[replyId]\n            };\n          }\n          return reply;\n        });\n        return {\n          ...comment,\n          replies: updatedReplies\n        };\n      }\n      return comment;\n    });\n    setComments(updatedComments);\n    setEditingReplyId(null);\n    setEditReplyText({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Indie Music\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFollowClick,\n      className: \"follow-button\",\n      children: isFollowing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 26\n        }, this), \" Following\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 55\n        }, this), \" Follow\"]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), randomTrack && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"featured-track-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todays Featured Track:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: randomTrack.album.images[0].url,\n          alt: randomTrack.name,\n          className: \"track-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"track-title\",\n            children: randomTrack.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"track-artist\",\n            children: [\"by \", randomTrack.artists.map(artist => artist.name).join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-container\",\n        children: [/*#__PURE__*/_jsxDEV(StarRating, {\n          onRating: rate => {\n            console.log(\"Rating:\", rate);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-box\",\n          children: editStatus[comment.id] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: editTexts[comment.id],\n              onChange: e => setEditTexts({\n                ...editTexts,\n                [comment.id]: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSave(comment.id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCancel(comment.id),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: comment.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: new Date(comment.date).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"comment-edit-button\",\n                onClick: () => handleEdit(comment.id),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 21\n            }, this), comment.replies && comment.replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reply-box\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reply-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: reply.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 27\n                }, this), editingReplyId === reply.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editReplyText[reply.id] || reply.body,\n                  onChange: e => setEditReplyText({\n                    ...editReplyText,\n                    [reply.id]: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 29\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: reply.body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(reply.date).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"comment-edit-button\",\n                  onClick: () => startEditReply(reply.id, reply.body),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 27\n                }, this), editingReplyId === reply.id && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => saveReplyChanges(reply.id),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 25\n              }, this)\n            }, reply.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 23\n            }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => handleReplySubmit(comment.id, e),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Reply...\",\n                value: replyTexts[comment.id] || '',\n                onChange: e => setReplyTexts({\n                  ...replyTexts,\n                  [comment.id]: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCommentSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"comment-input\",\n          placeholder: \"Add a comment...\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-comment\",\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlists-container\",\n      children: IndiePlaylists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: playlist.images[0].url,\n          alt: playlist.name,\n          className: \"playlist-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlist-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: playlist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: playlist.external_urls.spotify,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"playlist-link\",\n            children: \"Listen on Spotify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)]\n      }, playlist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n_s(Indie, \"zw56NNI40fT2A9Jsk2CBwt+4LG8=\", false, function () {\n  return [useUser];\n});\n_c = Indie;\nexport default Indie;\nvar _c;\n$RefreshReg$(_c, \"Indie\");","map":{"version":3,"names":["React","useState","useEffect","FaCheck","FaPlus","useUser","axios","StarRating","jsxDEV","_jsxDEV","Fragment","_Fragment","CLIENT_ID","CLIENT_SECRET","Indie","_s","isFollowing","setIsFollowing","accessToken","setAccessToken","IndiePlaylists","setIndiePlaylists","randomTrack","setRandomTrack","user","comments","setComments","newComment","setNewComment","replyTexts","setReplyTexts","username","localStorage","getItem","editStatus","setEditStatus","editTexts","setEditTexts","editingReplyId","setEditingReplyId","editReplyText","setEditReplyText","handleFollowClick","post","encodeURIComponent","email","community","followStatus","err","console","error","fetchFollowStatus","response","get","data","fetchInitialFollow","getAccessToken","authParameters","method","headers","body","fetch","json","access_token","fetchIndieMusic","ok","Error","status","playlists","items","length","playlistId","id","tracksResponse","tracksData","randomIndex","Math","floor","random","track","catch","handleCommentSubmit","e","preventDefault","newCommentToAdd","date","Date","replies","handleReplySubmit","commentId","addReplyToComment","replyText","updatedComments","map","comment","newReply","handleEdit","find","handleCancel","handleSave","startEditReply","replyId","currentText","saveReplyChanges","updatedReplies","reply","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","album","images","url","alt","name","artists","artist","join","onRating","rate","log","value","onChange","target","toLocaleString","type","onSubmit","placeholder","playlist","href","external_urls","spotify","rel","_c","$RefreshReg$"],"sources":["/Users/joelhillmann/Documents/GitHub/TuneTalk/tunetalk/src/pages/CommunityGenres/Indie.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FaCheck, FaPlus } from 'react-icons/fa'; // FontAwesome icons\nimport '../../css/Community.css';\nimport { useUser } from \"../../authentication/UserState\";\nimport axios from \"axios\";\nimport StarRating from '../StarRating';\n\nconst CLIENT_ID = \"a8c9857ace8449f290ed14c54c878e1f\";\nconst CLIENT_SECRET = \"c747a0da53124c4ba8bc12a0e88d859b\";\n\nfunction Indie() {\n  const [isFollowing, setIsFollowing] = useState(false);\n  const [accessToken, setAccessToken] = useState('');\n  const [IndiePlaylists, setIndiePlaylists] = useState([]);\n  const [randomTrack, setRandomTrack] = useState(null);\n  const [user] = useUser(); \n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [replyTexts, setReplyTexts] = useState({});\n  const username = localStorage.getItem(\"userlogin\");\n  const [editStatus, setEditStatus] = useState({});\n  const [editTexts, setEditTexts] = useState({});\n  const [editingReplyId, setEditingReplyId] = useState(null);\n  const [editReplyText, setEditReplyText] = useState({});\n\n    const handleFollowClick = async () => {\n      if (!isFollowing){\n        try {\n            await axios.post(`http://localhost:8082/api/community/follow/${encodeURIComponent(user.email)}`, {\n              community: 'indie',\n              followStatus: true\n            });\n            setIsFollowing(true);\n        } catch (err) {\n            console.error(\"Error updating follow status:\", err);\n        }\n      } else {\n        try {\n          await axios.post(`http://localhost:8082/api/community/un-follow/${encodeURIComponent(user.email)}`, {\n            community: 'indie',\n            followStatus: false\n          });\n          setIsFollowing(false);\n        } catch (err) {\n          console.error(\"Error updating un-follow status:\", err);\n        }\n      }\n    };\n\n    const fetchFollowStatus = async () => {\n      try {\n          const response = await axios.get(`http://localhost:8082/api/community/status/${encodeURIComponent(user.email)}`);\n          setIsFollowing(response.data.Indie); // assuming the response data structure matches your expectations\n      } catch (err) {\n          console.error(\"Error fetching follow status:\", err);\n      }\n    };\n\n    const fetchInitialFollow = async () => {\n      try {\n          await axios.post(`http://localhost:8082/api/community/initiate-follows/${encodeURIComponent(user.email)}`);\n      } catch (err) {\n          console.error(\"Error initializing follow record:\", err);\n      }\n    };\n\n    useEffect(() => {\n      // Function to retrieve the access token\n      const getAccessToken = async () => {\n        const authParameters = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: `grant_type=client_credentials&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`,\n        };\n\n        const response = await fetch('https://accounts.spotify.com/api/token', authParameters);\n        const data = await response.json();\n        setAccessToken(data.access_token);\n      };\n\n      getAccessToken();\n    }, []);\n\n    useEffect(() => {\n      // Function to fetch Indie playlists using the access token\n      const fetchIndieMusic = async () => {\n        if (!accessToken) return;\n\n        const response = await fetch('https://api.spotify.com/v1/browse/categories/Indie/playlists', {\n          headers: { 'Authorization': `Bearer ${accessToken}` },\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n      const data = await response.json();\n      setIndiePlaylists(data.playlists.items);\n\n      if (data.playlists.items.length > 0) {\n        const playlistId = data.playlists.items[0].id;\n        const tracksResponse = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n          headers: { 'Authorization': `Bearer ${accessToken}` },\n        });\n        const tracksData = await tracksResponse.json();\n        if (tracksData.items.length > 0) {\n          const randomIndex = Math.floor(Math.random() * tracksData.items.length);\n          setRandomTrack(tracksData.items[randomIndex].track);\n        }\n      }\n    };\n\n      fetchIndieMusic().catch(error => {\n        console.error('Fetching Indie playlists failed:', error);\n      });\n    }, [accessToken]);\n\n    useEffect(() => {\n      if (user.email) {\n        fetchInitialFollow();\n        fetchFollowStatus();\n      }\n    // eslint-disable-next-line\n    }, [user.email]); // This effect depends on user.email\n\n  // ALL BLAKES CODE\n\n  //sets the new comments\n  const handleCommentSubmit = (e) => {\n    e.preventDefault();\n\n    const newCommentToAdd = {\n      id: comments.length + 1,\n      username: username,\n      body: newComment,\n      date: new Date(),\n      replies: []\n    };\n\n    setComments([...comments, newCommentToAdd]);\n    setNewComment('');\n  };\n\n  //sets the new replies\n  const handleReplySubmit = async (commentId, e) => {\n    e.preventDefault();\n    addReplyToComment(commentId, replyTexts[commentId]);\n    setReplyTexts({ ...replyTexts, [commentId]: '' });\n  };\n\n  //adds the reply to the parent comment\n  const addReplyToComment = (commentId, replyText) => {\n    const updatedComments = comments.map(comment => {\n      if (comment.id === commentId) {\n        const newReply = {\n          id: comment.replies.length + 1,\n          username: username,\n          body: replyText,\n          date: new Date()\n        };\n        return { ...comment, replies: [...comment.replies, newReply] };\n      }\n      return comment;\n    });\n    setComments(updatedComments);\n  };\n\n\n  // Start editing a comment\n  const handleEdit = (id) => {\n    setEditStatus({ ...editStatus, [id]: true });\n    setEditTexts({ ...editTexts, [id]: comments.find(comment => comment.id === id).body });\n  };\n\n  // Cancel editing\n  const handleCancel = (id) => {\n    setEditStatus({ ...editStatus, [id]: false });\n  };\n\n  // Save the edited comment\n  const handleSave = (id) => {\n    const updatedComments = comments.map(comment => {\n      if (comment.id === id) {\n        return { ...comment, body: editTexts[id] };\n      }\n      return comment;\n    });\n    setComments(updatedComments);\n    setEditStatus({ ...editStatus, [id]: false });\n  };\n\n  const startEditReply = (replyId, currentText) => {\n    setEditingReplyId(replyId);\n    setEditReplyText({ ...editReplyText, [replyId]: currentText });\n  };\n\n  const saveReplyChanges = (replyId) => {\n    const updatedComments = comments.map(comment => {\n      if (comment.id === replyId) {\n        const updatedReplies = comment.replies.map(reply => {\n          if (reply.id === replyId) {\n            return { ...reply, body: editReplyText[replyId] };\n          }\n          return reply;\n        });\n        return { ...comment, replies: updatedReplies };\n      }\n      return comment;\n    });\n    setComments(updatedComments);\n    setEditingReplyId(null);\n    setEditReplyText({});\n  };\n\n  return (\n    <div className=\"container-page\">\n      <h1>Indie Music</h1>\n      <button onClick={handleFollowClick} className=\"follow-button\">\n        {isFollowing ? <><FaCheck /> Following</> : <><FaPlus /> Follow</>}\n      </button>\n      {randomTrack && (\n        <div className=\"featured-track-container\">\n          <h2>Todays Featured Track:</h2>\n          <div className=\"track-card\">\n            <img src={randomTrack.album.images[0].url} alt={randomTrack.name} className=\"track-image\" />\n            <div className=\"track-info\">\n              <p className=\"track-title\">{randomTrack.name}</p>\n              <p className=\"track-artist\">by {randomTrack.artists.map(artist => artist.name).join(', ')}</p>\n            </div>\n          </div>\n          <div className=\"comments-container\">\n            <StarRating onRating={(rate) => {\n                console.log(\"Rating:\", rate);\n            }} />\n            {comments.map(comment => (\n              <div key={comment.id} className=\"comment-box\">\n                {editStatus[comment.id] ? (\n                  <>\n                    <input\n                      value={editTexts[comment.id]}\n                      onChange={(e) => setEditTexts({ ...editTexts, [comment.id]: e.target.value })}\n                    />\n                    <button onClick={() => handleSave(comment.id)}>Save</button>\n                    <button onClick={() => handleCancel(comment.id)}>Cancel</button>\n                  </>\n                ) : (\n                  <>\n                    <div className=\"comment-header\">\n                      <strong>{comment.username}</strong>\n                      <p>{comment.body}</p>\n                      <small>{new Date(comment.date).toLocaleString()}</small>\n                      <button className=\"comment-edit-button\" onClick={() => handleEdit(comment.id)}>Edit</button>\n                    </div>\n                    {comment.replies && comment.replies.map(reply => (\n                      <div key={reply.id} className=\"reply-box\">\n                        <div className=\"reply-content\">\n                          <strong>{reply.username}</strong>\n                          {editingReplyId === reply.id ? (\n                            <input\n                              type=\"text\"\n                              value={editReplyText[reply.id] || reply.body}\n                              onChange={(e) => setEditReplyText({ ...editReplyText, [reply.id]: e.target.value })}\n                            />\n                          ) : (\n                            <p>{reply.body}</p>\n                          )}\n                          <small>{new Date(reply.date).toLocaleString()}</small>\n                          <button className=\"comment-edit-button\" onClick={() => startEditReply(reply.id, reply.body)}>Edit</button>\n                          {editingReplyId === reply.id && (\n                            <button onClick={() => saveReplyChanges(reply.id)}>Save</button>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                    <form onSubmit={(e) => handleReplySubmit(comment.id, e)}>\n                      <input\n                        type=\"text\"\n                        placeholder=\"Reply...\"\n                        value={replyTexts[comment.id] || ''}\n                        onChange={(e) => setReplyTexts({ ...replyTexts, [comment.id]: e.target.value })}\n                      />\n                      <button type=\"submit\">Reply</button>\n                    </form>\n                  </>\n                )}\n              </div>\n            ))}\n\n          </div>\n          <form onSubmit={handleCommentSubmit}>\n            <input\n              type=\"text\"\n              className=\"comment-input\"\n              placeholder=\"Add a comment...\"\n              value={newComment}\n              onChange={(e) => setNewComment(e.target.value)}\n            />\n            <button type=\"submit\" className=\"submit-comment\">Comment</button>\n          </form>\n        </div>\n\n      )}\n      <div className=\"playlists-container\">\n        {IndiePlaylists.map((playlist) => (\n          <div key={playlist.id} className=\"playlist-card\">\n            <img src={playlist.images[0].url} alt={playlist.name} className=\"playlist-image\" />\n            <div className=\"playlist-info\">\n              <h3>{playlist.name}</h3>\n              <a href={playlist.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\" className=\"playlist-link\">Listen on Spotify</a>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Indie;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}