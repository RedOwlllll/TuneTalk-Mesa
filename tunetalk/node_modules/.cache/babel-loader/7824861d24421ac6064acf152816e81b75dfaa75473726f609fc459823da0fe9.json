{"ast":null,"code":"var _jsxFileName = \"/Users/joelhillmann/Documents/GitHub/TuneTalk/tunetalk/src/components/PostForm.js\",\n  _s = $RefreshSig$();\n//import { set } from \"mongoose\"\nimport { useState } from \"react\";\n\n//username,email,title,artist,rating,caption\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = () => {\n  _s();\n  const [postusername, setPostUsername] = useState(''); //Username state\n  const [email, setEmail] = useState(''); //Email state\n  const [title, setTitle] = useState(''); //Title state\n  const [artist, setArtist] = useState(''); //Artist state\n  const [rating, setRating] = useState(''); //Rating state\n  const [caption, setCaption] = useState(''); //Caption state\n  const [error, setError] = useState(null); //Error state\n\n  const handleSubmit = async e => {\n    //Submit post button\n    //e.preventDefault() //This line of code prevents automatic refresh\n\n    const post = {\n      postusername,\n      email,\n      title,\n      artist,\n      rating,\n      caption\n    }; //Store state values in post object\n\n    const response = await fetch('/api/posts', {\n      //send a POST request to the '/api/posts' endpoint\n      method: 'POST',\n      body: JSON.stringify(post),\n      //convert post object to JSON string as the payload\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json(); //error handling\n    if (!response.ok) {\n      setError(json.error);\n    }\n    if (response.ok) {\n      //If the given json is valid, reset states \n      setPostUsername('');\n      setEmail('');\n      setTitle('');\n      setArtist('');\n      setRating('');\n      setCaption('');\n      setError(null);\n      console.log('post added');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setPostUsername(e.target.value),\n      value: postusername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setEmail(e.target.value),\n      value: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Song Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTitle(e.target.value),\n      value: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Song Artist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setArtist(e.target.value),\n      value: artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Song Rating\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => setRating(e.target.value),\n      value: rating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Caption\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setCaption(e.target.value),\n      value: caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(PostForm, \"D9XawjAfZZKz8WdBlZS8JdZOg6I=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","PostForm","_s","postusername","setPostUsername","email","setEmail","title","setTitle","artist","setArtist","rating","setRating","caption","setCaption","error","setError","handleSubmit","e","post","response","fetch","method","body","JSON","stringify","headers","json","ok","console","log","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","_c","$RefreshReg$"],"sources":["/Users/joelhillmann/Documents/GitHub/TuneTalk/tunetalk/src/components/PostForm.js"],"sourcesContent":["//import { set } from \"mongoose\"\nimport { useState } from \"react\"\n\n//username,email,title,artist,rating,caption\n\nconst PostForm = () =>{\n    const [postusername, setPostUsername] = useState('')    //Username state\n    const [email, setEmail] = useState('')      //Email state\n    const [title, setTitle] = useState('')      //Title state\n    const [artist, setArtist] = useState('')    //Artist state\n    const [rating, setRating] = useState('')    //Rating state\n    const [caption, setCaption] = useState('')  //Caption state\n    const [error, setError] = useState(null)    //Error state\n\n\n    const handleSubmit = async (e) =>{  //Submit post button\n        //e.preventDefault() //This line of code prevents automatic refresh\n        \n        const post = {postusername,email,title,artist,rating,caption} //Store state values in post object\n\n        const response = await fetch('/api/posts', {    //send a POST request to the '/api/posts' endpoint\n            method: 'POST', \n            body: JSON.stringify(post), //convert post object to JSON string as the payload\n            headers: {\n                'Content-Type': 'application/json'\n            }\n\n        })\n\n        const json = await response.json()  //error handling\n        if (!response.ok) {\n            setError(json.error)\n        }\n\n\n        \n\n        if (response.ok) {  //If the given json is valid, reset states \n            setPostUsername('')\n            setEmail('')\n            setTitle('')\n            setArtist('')\n            setRating('')\n            setCaption('')\n\n            setError(null)\n            console.log('post added')\n        }\n\n    }\n\n    return (\n        <form className=\"create\" onSubmit={handleSubmit}>\n            <h3>Add Post</h3>\n\n            <label>Username</label>\n            <input type=\"text\" onChange={(e) => setPostUsername(e.target.value)} value={postusername} />\n\n            <label>Email</label>\n            <input type=\"text\" onChange={(e) => setEmail(e.target.value)} value={email} />\n\n            <label>Song Title</label>\n            <input type=\"text\" onChange={(e) => setTitle(e.target.value)} value={title} />\n\n            <label>Song Artist</label>\n            <input type=\"text\" onChange={(e) => setArtist(e.target.value)} value={artist} />\n\n            <label>Song Rating</label>\n            <input type=\"number\" onChange={(e) => setRating(e.target.value)} value={rating} />\n\n            <label>Caption</label>\n            <input type=\"text\" onChange={(e) => setCaption(e.target.value)} value={caption} />\n            \n        <button>Post</button>\n\n        {error &&  <div className=\"error\">{error}</div>}\n        </form>\n\n    )\n}\n\n\nexport default PostForm"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAClB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,EAAI;EACxD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,EAAM;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,EAAM;EAC5C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,EAAI;EAC5C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,EAAI;EAC5C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,EAAE;EAC5C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC,EAAI;;EAG5C,MAAMmB,YAAY,GAAG,MAAOC,CAAC,IAAI;IAAG;IAChC;;IAEA,MAAMC,IAAI,GAAG;MAAChB,YAAY;MAACE,KAAK;MAACE,KAAK;MAACE,MAAM;MAACE,MAAM;MAACE;IAAO,CAAC,EAAC;;IAE9D,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;MAAK;MAC5CC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;MAAE;MAC5BO,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IAEJ,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC,EAAE;IACpC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACdZ,QAAQ,CAACW,IAAI,CAACZ,KAAK,CAAC;IACxB;IAKA,IAAIK,QAAQ,CAACQ,EAAE,EAAE;MAAG;MAChBxB,eAAe,CAAC,EAAE,CAAC;MACnBE,QAAQ,CAAC,EAAE,CAAC;MACZE,QAAQ,CAAC,EAAE,CAAC;MACZE,SAAS,CAAC,EAAE,CAAC;MACbE,SAAS,CAAC,EAAE,CAAC;MACbE,UAAU,CAAC,EAAE,CAAC;MAEdE,QAAQ,CAAC,IAAI,CAAC;MACda,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAC7B;EAEJ,CAAC;EAED,oBACI9B,OAAA;IAAM+B,SAAS,EAAC,QAAQ;IAACC,QAAQ,EAAEf,YAAa;IAAAgB,QAAA,gBAC5CjC,OAAA;MAAAiC,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjBrC,OAAA;MAAAiC,QAAA,EAAO;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACvBrC,OAAA;MAAOsC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGrB,CAAC,IAAKd,eAAe,CAACc,CAAC,CAACsB,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAEtC;IAAa;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE5FrC,OAAA;MAAAiC,QAAA,EAAO;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpBrC,OAAA;MAAOsC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGrB,CAAC,IAAKZ,QAAQ,CAACY,CAAC,CAACsB,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAEpC;IAAM;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE9ErC,OAAA;MAAAiC,QAAA,EAAO;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzBrC,OAAA;MAAOsC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGrB,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACsB,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAElC;IAAM;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE9ErC,OAAA;MAAAiC,QAAA,EAAO;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1BrC,OAAA;MAAOsC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGrB,CAAC,IAAKR,SAAS,CAACQ,CAAC,CAACsB,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAEhC;IAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEhFrC,OAAA;MAAAiC,QAAA,EAAO;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1BrC,OAAA;MAAOsC,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAGrB,CAAC,IAAKN,SAAS,CAACM,CAAC,CAACsB,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAE9B;IAAO;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAElFrC,OAAA;MAAAiC,QAAA,EAAO;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACtBrC,OAAA;MAAOsC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGrB,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACsB,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAE5B;IAAQ;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEtFrC,OAAA;MAAAiC,QAAA,EAAQ;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEpBtB,KAAK,iBAAKf,OAAA;MAAK+B,SAAS,EAAC,OAAO;MAAAE,QAAA,EAAElB;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAGf,CAAC;AAAAnC,EAAA,CA1EKD,QAAQ;AAAAyC,EAAA,GAARzC,QAAQ;AA6Ed,eAAeA,QAAQ;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}