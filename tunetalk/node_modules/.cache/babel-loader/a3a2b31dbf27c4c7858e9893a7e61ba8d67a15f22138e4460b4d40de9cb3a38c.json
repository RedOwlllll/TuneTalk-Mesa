{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mesac\\\\OneDrive\\\\Documents\\\\GitHub\\\\TuneTalk\\\\tunetalk\\\\src\\\\pages\\\\Friends.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useUser } from '../UserState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Friends = () => {\n  _s();\n  const {\n    user\n  } = useUser();\n  const [userId, setUserId] = useState('');\n  const [friendEmail, setFriendEmail] = useState('');\n  const [friends, setFriends] = useState([]);\n  const [requests, setRequests] = useState({\n    received: [],\n    sent: []\n  });\n\n  // Define the base URL for the backend\n  const backendBaseUrl = 'http://localhost:8082';\n  useEffect(() => {\n    if (!userId) {\n      console.error('UserId not set');\n      return;\n    }\n  }, [userId]);\n\n  // Fetch friends and friend requests on component mount\n  useEffect(() => {\n    const fetchFriends = async () => {\n      try {\n        const res = await axios.get(`${backendBaseUrl}/api/friends/list/${userId}`);\n        setFriends(res.data);\n      } catch (err) {\n        console.error('Error fetching friends:', err);\n      }\n    };\n    const fetchRequests = async () => {\n      try {\n        const response = await axios.get(`${backendBaseUrl}/api/friends/pending/${userId}`);\n        setRequests(prevRequests => ({\n          ...prevRequests,\n          received: response.data\n        }));\n      } catch (error) {\n        console.error('Error fetching pending friend requests:', error);\n      }\n    };\n    fetchFriends();\n    fetchRequests();\n  }, [userId]);\n  const handleAddFriend = async () => {\n    try {\n      await axios.post(`${backendBaseUrl}/api/friends/request`, {\n        requesterId: userId,\n        recipientEmail: friendEmail\n      });\n      alert('Friend request sent!');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message;\n      alert(`Failed to send friend request: ${errorMessage}`);\n    }\n  };\n  const handleResponse = async (requestId, status) => {\n    try {\n      await axios.put(`${backendBaseUrl}/api/friends/response`, {\n        friendId: requestId,\n        status\n      });\n      alert(`Friend request ${status}!`);\n\n      // Update local state to remove the handled request from the list\n      setRequests(prevRequests => ({\n        ...prevRequests,\n        received: prevRequests.received.filter(request => request._id !== requestId)\n      }));\n    } catch (error) {\n      alert(`Error updating friend request: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friends-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: friendEmail,\n      onChange: e => setFriendEmail(e.target.value),\n      placeholder: \"Enter friend's email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddFriend,\n      children: \"Add Friend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: friends.map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: friend.username\n      }, friend._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Friend Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: requests.received.map(request => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [request.requester.username, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleResponse(request._id, 'accepted'),\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleResponse(request._id, 'declined'),\n          children: \"Decline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, request._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(Friends, \"etRg3oXSL5rhF4+S93gabZx+Aoo=\", false, function () {\n  return [useUser];\n});\n_c = Friends;\nvar _c;\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"names":["React","useState","useEffect","axios","useUser","jsxDEV","_jsxDEV","Friends","_s","user","userId","setUserId","friendEmail","setFriendEmail","friends","setFriends","requests","setRequests","received","sent","backendBaseUrl","console","error","fetchFriends","res","get","data","err","fetchRequests","response","prevRequests","handleAddFriend","post","requesterId","recipientEmail","alert","_err$response","_err$response$data","errorMessage","message","handleResponse","requestId","status","put","friendId","filter","request","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","map","friend","username","requester","_c","$RefreshReg$"],"sources":["C:/Users/mesac/OneDrive/Documents/GitHub/TuneTalk/tunetalk/src/pages/Friends.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useUser } from '../UserState';\r\n\r\nexport const Friends = () => {\r\n    const { user } = useUser();\r\n    const [userId, setUserId] = useState('');\r\n    const [friendEmail, setFriendEmail] = useState('');\r\n    const [friends, setFriends] = useState([]);\r\n    const [requests, setRequests] = useState({ received: [], sent: [] });\r\n\r\n    // Define the base URL for the backend\r\n    const backendBaseUrl = 'http://localhost:8082';\r\n\r\n    useEffect(() => {\r\n        if (!userId) {\r\n            console.error('UserId not set');\r\n            return;\r\n        }\r\n    }, [userId]);\r\n\r\n    // Fetch friends and friend requests on component mount\r\n    useEffect(() => {\r\n        const fetchFriends = async () => {\r\n            try {\r\n                const res = await axios.get(`${backendBaseUrl}/api/friends/list/${userId}`);\r\n                setFriends(res.data);\r\n            } catch (err) {\r\n                console.error('Error fetching friends:', err);\r\n            }\r\n        };\r\n\r\n        const fetchRequests = async () => {\r\n            try {\r\n                const response = await axios.get(`${backendBaseUrl}/api/friends/pending/${userId}`);\r\n                setRequests(prevRequests => ({ ...prevRequests, received: response.data }));\r\n            } catch (error) {\r\n                console.error('Error fetching pending friend requests:', error);\r\n            }\r\n        };\r\n\r\n        fetchFriends();\r\n        fetchRequests();\r\n    }, [userId]);\r\n\r\n    const handleAddFriend = async () => {\r\n        try {\r\n            await axios.post(`${backendBaseUrl}/api/friends/request`, { requesterId: userId, recipientEmail: friendEmail });\r\n            alert('Friend request sent!');\r\n        } catch (err) {\r\n            const errorMessage = err.response?.data?.message || err.message;\r\n            alert(`Failed to send friend request: ${errorMessage}`);\r\n        }\r\n    };\r\n\r\n    const handleResponse = async (requestId, status) => {\r\n        try {\r\n            await axios.put(`${backendBaseUrl}/api/friends/response`, { friendId: requestId, status });\r\n            alert(`Friend request ${status}!`);\r\n            \r\n            // Update local state to remove the handled request from the list\r\n            setRequests(prevRequests => ({\r\n                ...prevRequests,\r\n                received: prevRequests.received.filter(request => request._id !== requestId)\r\n            }));\r\n        } catch (error) {\r\n            alert(`Error updating friend request: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"friends-page\">\r\n            <h1>Friends</h1>\r\n            <input\r\n                value={friendEmail}\r\n                onChange={(e) => setFriendEmail(e.target.value)}\r\n                placeholder=\"Enter friend's email\"\r\n            />\r\n            <button onClick={handleAddFriend}>Add Friend</button>\r\n            <h2>My Friends</h2>\r\n            <ul>\r\n                {friends.map(friend => <li key={friend._id}>{friend.username}</li>)}\r\n            </ul>\r\n            <h2>Friend Requests</h2>\r\n            <ul>\r\n                {requests.received.map(request => (\r\n                    <li key={request._id}>\r\n                        {request.requester.username} {/* Adjusted to username if that's the populated field */}\r\n                        <button onClick={() => handleResponse(request._id, 'accepted')}>Accept</button>\r\n                        <button onClick={() => handleResponse(request._id, 'declined')}>Decline</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}