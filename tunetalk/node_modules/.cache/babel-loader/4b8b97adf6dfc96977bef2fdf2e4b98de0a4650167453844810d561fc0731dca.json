{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tabit\\\\OneDrive - AUT University\\\\Documents\\\\GitHub\\\\TuneTalk\\\\tunetalk\\\\src\\\\pages\\\\UserAccount\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from \"../../authentication/UserState\";\nimport \"../../css/App.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = () => {\n  _s();\n  /* State variables for the input types - useState hook will first get the user input then set that input into the second variable */\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [registerUsername, setRegisterUsername] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  const [alertMessage, setAlertMessage] = useState(\"\"); // Variable that stores message at the bottom of page depending on whether user input.\n  const [user, setUser] = useUser();\n\n  // Variables to store pattern regex for password and email (dont add semicolon)\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d!@#$%^&*()\\-_=+{};:,<.>`~]{8,}$/;\n  const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  const usernameRegex = /^[a-zA-Z0-9]{1,15}$/; // Removed underscore and full stop for simplicity\n\n  // Vairiable to user import useNavigate \n  const navigate = useNavigate();\n\n  // Function that handles what happens signup button is clicked.\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevents page from reloading on empty \n    console.log(registerEmail, registerUsername, registerPassword);\n    let incorrectMessage = \"\";\n\n    // Check the pattern regex for email, username and password is correct before making API call \n    if (!emailRegex.test(registerEmail)) {\n      incorrectMessage += \"Invalid email address. (Ensure there are no spaces in your email address.) \\n\";\n    }\n    if (!usernameRegex.test(registerUsername)) {\n      incorrectMessage += \"Invalid username. (Ensure there are no spaces or special characters in your email address.) \\n\";\n    }\n    if (!passwordRegex.test(registerPassword)) {\n      incorrectMessage += \"Password must contain a minimum of eight characters, at least one uppercase letter and one number.\\n\";\n    }\n    if (incorrectMessage) {\n      setAlertMessage(incorrectMessage);\n      return;\n    }\n\n    // Connect to tunetalksignup api\n    axios.post(\"http://localhost:8082/api/tunetalkregister\", {\n      email: registerEmail,\n      username: registerUsername,\n      password: registerPassword\n    }).then(res => {\n      const data = res.data;\n      console.log(data, \"userRegister\");\n      if (data.status === \"ok\") {\n        setAlertMessage(\"You are now registered with TuneTalk!\");\n        setUser({\n          email: data.email,\n          // Refer to email object directly (since the email is being registered it should not be in mongodb yet)\n          username: data.username // Likewise w/ username\n          // isAuthenticated: true - commented out so that when on the register page, protected routes are still protected (they need to connect to spotify).\n        });\n        console.log(\"user registration authenticated in TuneTalk\");\n      } else if (data.error === \"email_exists\") {\n        setAlertMessage(\"Email is registered already. Please login instead or choose another email.\");\n      } else if (data.error === \"username_exists\") {\n        setAlertMessage(\"Username is registered already. Please login instead or choose another username.\");\n      }\n    });\n  };\n\n  // When user email and username is ok, will prompt them to the spotify account page\n  useEffect(() => {\n    if (user.email && user.username) {\n      navigate(\"/account/spotify\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Please enter the required fields below to register.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 77\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 82\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: registerEmail,\n        onChange: e => setRegisterEmail(e.target.value),\n        id: \"registerEmail\",\n        placeholder: \"email@gmail.com *\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 158\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: registerUsername,\n        onChange: e => setRegisterUsername(e.target.value),\n        id: \"setRegisterUsername\",\n        placeholder: \"username *\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 165\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: registerPassword,\n        onChange: e => setRegisterPassword(e.target.value),\n        type: \"password\",\n        id: \"registerPassword\",\n        placeholder: \"*********\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 175\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 22\n      }, this), alertMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert\",\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"link-btn\",\n        type: \"button\",\n        onClick: () => navigate('/account/login'),\n        children: \"Already have an account? Sign in here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 151\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 156\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"zdRyJ+XOboEF35a/j6BZ63MaKBs=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useUser","axios","jsxDEV","_jsxDEV","Register","_s","registerEmail","setRegisterEmail","registerUsername","setRegisterUsername","registerPassword","setRegisterPassword","alertMessage","setAlertMessage","user","setUser","passwordRegex","emailRegex","usernameRegex","navigate","handleSubmit","e","preventDefault","console","log","incorrectMessage","test","post","email","username","password","then","res","data","status","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","id","placeholder","required","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tabit/OneDrive - AUT University/Documents/GitHub/TuneTalk/tunetalk/src/pages/UserAccount/Register.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useUser } from \"../../authentication/UserState\";\r\nimport \"../../css/App.css\"; \r\nimport axios from \"axios\";\r\n\r\nexport const Register = () => {\r\n    \r\n    /* State variables for the input types - useState hook will first get the user input then set that input into the second variable */\r\n    const [registerEmail, setRegisterEmail] = useState(\"\");\r\n    const [registerUsername, setRegisterUsername] = useState(\"\");\r\n    const [registerPassword, setRegisterPassword] = useState(\"\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\"); // Variable that stores message at the bottom of page depending on whether user input.\r\n    const [user, setUser] = useUser();\r\n\r\n    // Variables to store pattern regex for password and email (dont add semicolon)\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d!@#$%^&*()\\-_=+{};:,<.>`~]{8,}$/\r\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/ \r\n    const usernameRegex = /^[a-zA-Z0-9]{1,15}$/ // Removed underscore and full stop for simplicity\r\n    \r\n    // Vairiable to user import useNavigate \r\n    const navigate = useNavigate();\r\n\r\n    // Function that handles what happens signup button is clicked.\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Prevents page from reloading on empty \r\n        console.log(registerEmail, registerUsername, registerPassword);\r\n\r\n        let incorrectMessage = \"\";\r\n\r\n        // Check the pattern regex for email, username and password is correct before making API call \r\n        if (!emailRegex.test(registerEmail)) {\r\n            incorrectMessage += \"Invalid email address. (Ensure there are no spaces in your email address.) \\n\" ;\r\n        }\r\n        \r\n        if(!usernameRegex.test(registerUsername)) {\r\n            incorrectMessage += \"Invalid username. (Ensure there are no spaces or special characters in your email address.) \\n\";\r\n        }\r\n\r\n        if (!passwordRegex.test(registerPassword)) {\r\n            incorrectMessage += \"Password must contain a minimum of eight characters, at least one uppercase letter and one number.\\n\";\r\n        } \r\n\r\n        if (incorrectMessage) {\r\n            setAlertMessage(incorrectMessage);\r\n            return;\r\n        }\r\n\r\n         // Connect to tunetalksignup api\r\n        axios.post(\"http://localhost:8082/api/tunetalkregister\", {\r\n            email: registerEmail,\r\n            username: registerUsername,\r\n            password: registerPassword,\r\n        })\r\n        .then((res) => {\r\n            const data = res.data;\r\n            console.log(data, \"userRegister\");\r\n            \r\n            if (data.status === \"ok\") {\r\n                setAlertMessage(\"You are now registered with TuneTalk!\");\r\n                setUser ({\r\n                    email: data.email, // Refer to email object directly (since the email is being registered it should not be in mongodb yet)\r\n                    username: data.username, // Likewise w/ username\r\n                    // isAuthenticated: true - commented out so that when on the register page, protected routes are still protected (they need to connect to spotify).\r\n                });\r\n                console.log(\"user registration authenticated in TuneTalk\");\r\n            } \r\n            else if (data.error === \"email_exists\") {\r\n                setAlertMessage(\"Email is registered already. Please login instead or choose another email.\");\r\n            } \r\n            else if (data.error === \"username_exists\") {\r\n                setAlertMessage(\"Username is registered already. Please login instead or choose another username.\");\r\n            }\r\n        });  \r\n    }\r\n\r\n    // When user email and username is ok, will prompt them to the spotify account page\r\n    useEffect (() => {\r\n        if (user.email && user.username) {\r\n            navigate(\"/account/spotify\"); \r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <br/>\r\n            <form className=\"register-form\" onSubmit={handleSubmit}>\r\n                <br/><h1>Create an account</h1>\r\n                <h4>Please enter the required fields below to register.</h4><br/><br/>\r\n                <label>Email:</label><br/>\r\n                <input value={registerEmail} onChange={(e) => setRegisterEmail(e.target.value)} id=\"registerEmail\" placeholder=\"email@gmail.com *\" required/><br/>\r\n                <label>Username:</label><br/>\r\n                <input value={registerUsername} onChange={(e) => setRegisterUsername (e.target.value)} id=\"setRegisterUsername\" placeholder=\"username *\" required /><br/>\r\n                <label>Password:</label><br/>\r\n                <input value={registerPassword} onChange={(e) => setRegisterPassword(e.target.value)} type=\"password\" id=\"registerPassword\" placeholder=\"*********\" required/><br/>\r\n                <br/>\r\n                <button type=\"submit\">register</button>\r\n                <br/><br/>\r\n                { alertMessage && (\r\n                    <div className=\"alert\">{ alertMessage }</div>\r\n                )} <br/>\r\n                <button className=\"link-btn\" type =\"button\" onClick={() => navigate('/account/login')}>Already have an account? Sign in here.</button><br/><br/>\r\n            </form>\r\n            <br/>\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}